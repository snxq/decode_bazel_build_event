// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/main/java/com/google/devtools/build/lib/buildeventstream/proto/build_event_stream.proto

package BuildEventStream

import (
	fmt "fmt"
	protobuf "go_protobuf_test/ProtoBuf"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Enumeration type characterizing the size of a test, as specified by the
// test rule.
type TestSize int32

const (
	TestSize_UNKNOWN  TestSize = 0
	TestSize_SMALL    TestSize = 1
	TestSize_MEDIUM   TestSize = 2
	TestSize_LARGE    TestSize = 3
	TestSize_ENORMOUS TestSize = 4
)

var TestSize_name = map[int32]string{
	0: "UNKNOWN",
	1: "SMALL",
	2: "MEDIUM",
	3: "LARGE",
	4: "ENORMOUS",
}

var TestSize_value = map[string]int32{
	"UNKNOWN":  0,
	"SMALL":    1,
	"MEDIUM":   2,
	"LARGE":    3,
	"ENORMOUS": 4,
}

func (x TestSize) String() string {
	return proto.EnumName(TestSize_name, int32(x))
}

func (TestSize) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0}
}

type TestStatus int32

const (
	TestStatus_NO_STATUS                  TestStatus = 0
	TestStatus_PASSED                     TestStatus = 1
	TestStatus_FLAKY                      TestStatus = 2
	TestStatus_TIMEOUT                    TestStatus = 3
	TestStatus_FAILED                     TestStatus = 4
	TestStatus_INCOMPLETE                 TestStatus = 5
	TestStatus_REMOTE_FAILURE             TestStatus = 6
	TestStatus_FAILED_TO_BUILD            TestStatus = 7
	TestStatus_TOOL_HALTED_BEFORE_TESTING TestStatus = 8
)

var TestStatus_name = map[int32]string{
	0: "NO_STATUS",
	1: "PASSED",
	2: "FLAKY",
	3: "TIMEOUT",
	4: "FAILED",
	5: "INCOMPLETE",
	6: "REMOTE_FAILURE",
	7: "FAILED_TO_BUILD",
	8: "TOOL_HALTED_BEFORE_TESTING",
}

var TestStatus_value = map[string]int32{
	"NO_STATUS":                  0,
	"PASSED":                     1,
	"FLAKY":                      2,
	"TIMEOUT":                    3,
	"FAILED":                     4,
	"INCOMPLETE":                 5,
	"REMOTE_FAILURE":             6,
	"FAILED_TO_BUILD":            7,
	"TOOL_HALTED_BEFORE_TESTING": 8,
}

func (x TestStatus) String() string {
	return proto.EnumName(TestStatus_name, int32(x))
}

func (TestStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{1}
}

type Aborted_AbortReason int32

const (
	Aborted_UNKNOWN Aborted_AbortReason = 0
	// The user requested the build to be aborted (e.g., by hitting Ctl-C).
	Aborted_USER_INTERRUPTED Aborted_AbortReason = 1
	// The user requested that no analysis be performed.
	Aborted_NO_ANALYZE Aborted_AbortReason = 8
	// The user requested that no build be carried out.
	Aborted_NO_BUILD Aborted_AbortReason = 9
	// The build or target was aborted as a timeout was exceeded.
	Aborted_TIME_OUT Aborted_AbortReason = 2
	// The build or target was aborted as some remote environment (e.g., for
	// remote execution of actions) was not available in the expected way.
	Aborted_REMOTE_ENVIRONMENT_FAILURE Aborted_AbortReason = 3
	// Failure due to reasons entirely internal to the build tool, e.g.,
	// running out of memory.
	Aborted_INTERNAL Aborted_AbortReason = 4
	// A Failure occurred in the loading phase of a target.
	Aborted_LOADING_FAILURE Aborted_AbortReason = 5
	// A Failure occurred in the analysis phase of a target.
	Aborted_ANALYSIS_FAILURE Aborted_AbortReason = 6
	// Target build was skipped (e.g. due to incompatible CPU constraints).
	Aborted_SKIPPED Aborted_AbortReason = 7
)

var Aborted_AbortReason_name = map[int32]string{
	0: "UNKNOWN",
	1: "USER_INTERRUPTED",
	8: "NO_ANALYZE",
	9: "NO_BUILD",
	2: "TIME_OUT",
	3: "REMOTE_ENVIRONMENT_FAILURE",
	4: "INTERNAL",
	5: "LOADING_FAILURE",
	6: "ANALYSIS_FAILURE",
	7: "SKIPPED",
}

var Aborted_AbortReason_value = map[string]int32{
	"UNKNOWN":                    0,
	"USER_INTERRUPTED":           1,
	"NO_ANALYZE":                 8,
	"NO_BUILD":                   9,
	"TIME_OUT":                   2,
	"REMOTE_ENVIRONMENT_FAILURE": 3,
	"INTERNAL":                   4,
	"LOADING_FAILURE":            5,
	"ANALYSIS_FAILURE":           6,
	"SKIPPED":                    7,
}

func (x Aborted_AbortReason) String() string {
	return proto.EnumName(Aborted_AbortReason_name, int32(x))
}

func (Aborted_AbortReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{2, 0}
}

// Identifier for a build event. It is deliberately structured to also provide
// information about which build target etc the event is related to.
//
// Events are chained via the event id as follows: each event has an id and a
// set of ids of children events such that apart from the initial event each
// event has an id that is mentioned as child id in an earlier event and a build
// invocation is complete if and only if all direct and indirect children of the
// initial event have been posted.
type BuildEventId struct {
	// Types that are valid to be assigned to Id:
	//	*BuildEventId_Unknown
	//	*BuildEventId_Progress
	//	*BuildEventId_Started
	//	*BuildEventId_UnstructuredCommandLine
	//	*BuildEventId_StructuredCommandLine
	//	*BuildEventId_WorkspaceStatus
	//	*BuildEventId_OptionsParsed
	//	*BuildEventId_Fetch
	//	*BuildEventId_Configuration
	//	*BuildEventId_TargetConfigured
	//	*BuildEventId_Pattern
	//	*BuildEventId_PatternSkipped
	//	*BuildEventId_NamedSet
	//	*BuildEventId_TargetCompleted
	//	*BuildEventId_ActionCompleted
	//	*BuildEventId_UnconfiguredLabel
	//	*BuildEventId_ConfiguredLabel
	//	*BuildEventId_TestResult
	//	*BuildEventId_TestSummary
	//	*BuildEventId_BuildFinished
	//	*BuildEventId_BuildToolLogs
	//	*BuildEventId_BuildMetrics
	Id                   isBuildEventId_Id `protobuf_oneof:"id"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BuildEventId) Reset()         { *m = BuildEventId{} }
func (m *BuildEventId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId) ProtoMessage()    {}
func (*BuildEventId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0}
}

func (m *BuildEventId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId.Unmarshal(m, b)
}
func (m *BuildEventId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId.Marshal(b, m, deterministic)
}
func (m *BuildEventId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId.Merge(m, src)
}
func (m *BuildEventId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId.Size(m)
}
func (m *BuildEventId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId proto.InternalMessageInfo

type isBuildEventId_Id interface {
	isBuildEventId_Id()
}

type BuildEventId_Unknown struct {
	Unknown *BuildEventId_UnknownBuildEventId `protobuf:"bytes,1,opt,name=unknown,proto3,oneof"`
}

type BuildEventId_Progress struct {
	Progress *BuildEventId_ProgressId `protobuf:"bytes,2,opt,name=progress,proto3,oneof"`
}

type BuildEventId_Started struct {
	Started *BuildEventId_BuildStartedId `protobuf:"bytes,3,opt,name=started,proto3,oneof"`
}

type BuildEventId_UnstructuredCommandLine struct {
	UnstructuredCommandLine *BuildEventId_UnstructuredCommandLineId `protobuf:"bytes,11,opt,name=unstructured_command_line,json=unstructuredCommandLine,proto3,oneof"`
}

type BuildEventId_StructuredCommandLine struct {
	StructuredCommandLine *BuildEventId_StructuredCommandLineId `protobuf:"bytes,18,opt,name=structured_command_line,json=structuredCommandLine,proto3,oneof"`
}

type BuildEventId_WorkspaceStatus struct {
	WorkspaceStatus *BuildEventId_WorkspaceStatusId `protobuf:"bytes,14,opt,name=workspace_status,json=workspaceStatus,proto3,oneof"`
}

type BuildEventId_OptionsParsed struct {
	OptionsParsed *BuildEventId_OptionsParsedId `protobuf:"bytes,12,opt,name=options_parsed,json=optionsParsed,proto3,oneof"`
}

type BuildEventId_Fetch struct {
	Fetch *BuildEventId_FetchId `protobuf:"bytes,17,opt,name=fetch,proto3,oneof"`
}

type BuildEventId_Configuration struct {
	Configuration *BuildEventId_ConfigurationId `protobuf:"bytes,15,opt,name=configuration,proto3,oneof"`
}

type BuildEventId_TargetConfigured struct {
	TargetConfigured *BuildEventId_TargetConfiguredId `protobuf:"bytes,16,opt,name=target_configured,json=targetConfigured,proto3,oneof"`
}

type BuildEventId_Pattern struct {
	Pattern *BuildEventId_PatternExpandedId `protobuf:"bytes,4,opt,name=pattern,proto3,oneof"`
}

type BuildEventId_PatternSkipped struct {
	PatternSkipped *BuildEventId_PatternExpandedId `protobuf:"bytes,10,opt,name=pattern_skipped,json=patternSkipped,proto3,oneof"`
}

type BuildEventId_NamedSet struct {
	NamedSet *BuildEventId_NamedSetOfFilesId `protobuf:"bytes,13,opt,name=named_set,json=namedSet,proto3,oneof"`
}

type BuildEventId_TargetCompleted struct {
	TargetCompleted *BuildEventId_TargetCompletedId `protobuf:"bytes,5,opt,name=target_completed,json=targetCompleted,proto3,oneof"`
}

type BuildEventId_ActionCompleted struct {
	ActionCompleted *BuildEventId_ActionCompletedId `protobuf:"bytes,6,opt,name=action_completed,json=actionCompleted,proto3,oneof"`
}

type BuildEventId_UnconfiguredLabel struct {
	UnconfiguredLabel *BuildEventId_UnconfiguredLabelId `protobuf:"bytes,19,opt,name=unconfigured_label,json=unconfiguredLabel,proto3,oneof"`
}

type BuildEventId_ConfiguredLabel struct {
	ConfiguredLabel *BuildEventId_ConfiguredLabelId `protobuf:"bytes,21,opt,name=configured_label,json=configuredLabel,proto3,oneof"`
}

type BuildEventId_TestResult struct {
	TestResult *BuildEventId_TestResultId `protobuf:"bytes,8,opt,name=test_result,json=testResult,proto3,oneof"`
}

type BuildEventId_TestSummary struct {
	TestSummary *BuildEventId_TestSummaryId `protobuf:"bytes,7,opt,name=test_summary,json=testSummary,proto3,oneof"`
}

type BuildEventId_BuildFinished struct {
	BuildFinished *BuildEventId_BuildFinishedId `protobuf:"bytes,9,opt,name=build_finished,json=buildFinished,proto3,oneof"`
}

type BuildEventId_BuildToolLogs struct {
	BuildToolLogs *BuildEventId_BuildToolLogsId `protobuf:"bytes,20,opt,name=build_tool_logs,json=buildToolLogs,proto3,oneof"`
}

type BuildEventId_BuildMetrics struct {
	BuildMetrics *BuildEventId_BuildMetricsId `protobuf:"bytes,22,opt,name=build_metrics,json=buildMetrics,proto3,oneof"`
}

func (*BuildEventId_Unknown) isBuildEventId_Id() {}

func (*BuildEventId_Progress) isBuildEventId_Id() {}

func (*BuildEventId_Started) isBuildEventId_Id() {}

func (*BuildEventId_UnstructuredCommandLine) isBuildEventId_Id() {}

func (*BuildEventId_StructuredCommandLine) isBuildEventId_Id() {}

func (*BuildEventId_WorkspaceStatus) isBuildEventId_Id() {}

func (*BuildEventId_OptionsParsed) isBuildEventId_Id() {}

func (*BuildEventId_Fetch) isBuildEventId_Id() {}

func (*BuildEventId_Configuration) isBuildEventId_Id() {}

func (*BuildEventId_TargetConfigured) isBuildEventId_Id() {}

func (*BuildEventId_Pattern) isBuildEventId_Id() {}

func (*BuildEventId_PatternSkipped) isBuildEventId_Id() {}

func (*BuildEventId_NamedSet) isBuildEventId_Id() {}

func (*BuildEventId_TargetCompleted) isBuildEventId_Id() {}

func (*BuildEventId_ActionCompleted) isBuildEventId_Id() {}

func (*BuildEventId_UnconfiguredLabel) isBuildEventId_Id() {}

func (*BuildEventId_ConfiguredLabel) isBuildEventId_Id() {}

func (*BuildEventId_TestResult) isBuildEventId_Id() {}

func (*BuildEventId_TestSummary) isBuildEventId_Id() {}

func (*BuildEventId_BuildFinished) isBuildEventId_Id() {}

func (*BuildEventId_BuildToolLogs) isBuildEventId_Id() {}

func (*BuildEventId_BuildMetrics) isBuildEventId_Id() {}

func (m *BuildEventId) GetId() isBuildEventId_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *BuildEventId) GetUnknown() *BuildEventId_UnknownBuildEventId {
	if x, ok := m.GetId().(*BuildEventId_Unknown); ok {
		return x.Unknown
	}
	return nil
}

func (m *BuildEventId) GetProgress() *BuildEventId_ProgressId {
	if x, ok := m.GetId().(*BuildEventId_Progress); ok {
		return x.Progress
	}
	return nil
}

func (m *BuildEventId) GetStarted() *BuildEventId_BuildStartedId {
	if x, ok := m.GetId().(*BuildEventId_Started); ok {
		return x.Started
	}
	return nil
}

func (m *BuildEventId) GetUnstructuredCommandLine() *BuildEventId_UnstructuredCommandLineId {
	if x, ok := m.GetId().(*BuildEventId_UnstructuredCommandLine); ok {
		return x.UnstructuredCommandLine
	}
	return nil
}

func (m *BuildEventId) GetStructuredCommandLine() *BuildEventId_StructuredCommandLineId {
	if x, ok := m.GetId().(*BuildEventId_StructuredCommandLine); ok {
		return x.StructuredCommandLine
	}
	return nil
}

func (m *BuildEventId) GetWorkspaceStatus() *BuildEventId_WorkspaceStatusId {
	if x, ok := m.GetId().(*BuildEventId_WorkspaceStatus); ok {
		return x.WorkspaceStatus
	}
	return nil
}

func (m *BuildEventId) GetOptionsParsed() *BuildEventId_OptionsParsedId {
	if x, ok := m.GetId().(*BuildEventId_OptionsParsed); ok {
		return x.OptionsParsed
	}
	return nil
}

func (m *BuildEventId) GetFetch() *BuildEventId_FetchId {
	if x, ok := m.GetId().(*BuildEventId_Fetch); ok {
		return x.Fetch
	}
	return nil
}

func (m *BuildEventId) GetConfiguration() *BuildEventId_ConfigurationId {
	if x, ok := m.GetId().(*BuildEventId_Configuration); ok {
		return x.Configuration
	}
	return nil
}

func (m *BuildEventId) GetTargetConfigured() *BuildEventId_TargetConfiguredId {
	if x, ok := m.GetId().(*BuildEventId_TargetConfigured); ok {
		return x.TargetConfigured
	}
	return nil
}

func (m *BuildEventId) GetPattern() *BuildEventId_PatternExpandedId {
	if x, ok := m.GetId().(*BuildEventId_Pattern); ok {
		return x.Pattern
	}
	return nil
}

func (m *BuildEventId) GetPatternSkipped() *BuildEventId_PatternExpandedId {
	if x, ok := m.GetId().(*BuildEventId_PatternSkipped); ok {
		return x.PatternSkipped
	}
	return nil
}

func (m *BuildEventId) GetNamedSet() *BuildEventId_NamedSetOfFilesId {
	if x, ok := m.GetId().(*BuildEventId_NamedSet); ok {
		return x.NamedSet
	}
	return nil
}

func (m *BuildEventId) GetTargetCompleted() *BuildEventId_TargetCompletedId {
	if x, ok := m.GetId().(*BuildEventId_TargetCompleted); ok {
		return x.TargetCompleted
	}
	return nil
}

func (m *BuildEventId) GetActionCompleted() *BuildEventId_ActionCompletedId {
	if x, ok := m.GetId().(*BuildEventId_ActionCompleted); ok {
		return x.ActionCompleted
	}
	return nil
}

func (m *BuildEventId) GetUnconfiguredLabel() *BuildEventId_UnconfiguredLabelId {
	if x, ok := m.GetId().(*BuildEventId_UnconfiguredLabel); ok {
		return x.UnconfiguredLabel
	}
	return nil
}

func (m *BuildEventId) GetConfiguredLabel() *BuildEventId_ConfiguredLabelId {
	if x, ok := m.GetId().(*BuildEventId_ConfiguredLabel); ok {
		return x.ConfiguredLabel
	}
	return nil
}

func (m *BuildEventId) GetTestResult() *BuildEventId_TestResultId {
	if x, ok := m.GetId().(*BuildEventId_TestResult); ok {
		return x.TestResult
	}
	return nil
}

func (m *BuildEventId) GetTestSummary() *BuildEventId_TestSummaryId {
	if x, ok := m.GetId().(*BuildEventId_TestSummary); ok {
		return x.TestSummary
	}
	return nil
}

func (m *BuildEventId) GetBuildFinished() *BuildEventId_BuildFinishedId {
	if x, ok := m.GetId().(*BuildEventId_BuildFinished); ok {
		return x.BuildFinished
	}
	return nil
}

func (m *BuildEventId) GetBuildToolLogs() *BuildEventId_BuildToolLogsId {
	if x, ok := m.GetId().(*BuildEventId_BuildToolLogs); ok {
		return x.BuildToolLogs
	}
	return nil
}

func (m *BuildEventId) GetBuildMetrics() *BuildEventId_BuildMetricsId {
	if x, ok := m.GetId().(*BuildEventId_BuildMetrics); ok {
		return x.BuildMetrics
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BuildEventId) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BuildEventId_OneofMarshaler, _BuildEventId_OneofUnmarshaler, _BuildEventId_OneofSizer, []interface{}{
		(*BuildEventId_Unknown)(nil),
		(*BuildEventId_Progress)(nil),
		(*BuildEventId_Started)(nil),
		(*BuildEventId_UnstructuredCommandLine)(nil),
		(*BuildEventId_StructuredCommandLine)(nil),
		(*BuildEventId_WorkspaceStatus)(nil),
		(*BuildEventId_OptionsParsed)(nil),
		(*BuildEventId_Fetch)(nil),
		(*BuildEventId_Configuration)(nil),
		(*BuildEventId_TargetConfigured)(nil),
		(*BuildEventId_Pattern)(nil),
		(*BuildEventId_PatternSkipped)(nil),
		(*BuildEventId_NamedSet)(nil),
		(*BuildEventId_TargetCompleted)(nil),
		(*BuildEventId_ActionCompleted)(nil),
		(*BuildEventId_UnconfiguredLabel)(nil),
		(*BuildEventId_ConfiguredLabel)(nil),
		(*BuildEventId_TestResult)(nil),
		(*BuildEventId_TestSummary)(nil),
		(*BuildEventId_BuildFinished)(nil),
		(*BuildEventId_BuildToolLogs)(nil),
		(*BuildEventId_BuildMetrics)(nil),
	}
}

func _BuildEventId_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BuildEventId)
	// id
	switch x := m.Id.(type) {
	case *BuildEventId_Unknown:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unknown); err != nil {
			return err
		}
	case *BuildEventId_Progress:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Progress); err != nil {
			return err
		}
	case *BuildEventId_Started:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Started); err != nil {
			return err
		}
	case *BuildEventId_UnstructuredCommandLine:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnstructuredCommandLine); err != nil {
			return err
		}
	case *BuildEventId_StructuredCommandLine:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StructuredCommandLine); err != nil {
			return err
		}
	case *BuildEventId_WorkspaceStatus:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WorkspaceStatus); err != nil {
			return err
		}
	case *BuildEventId_OptionsParsed:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OptionsParsed); err != nil {
			return err
		}
	case *BuildEventId_Fetch:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Fetch); err != nil {
			return err
		}
	case *BuildEventId_Configuration:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Configuration); err != nil {
			return err
		}
	case *BuildEventId_TargetConfigured:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TargetConfigured); err != nil {
			return err
		}
	case *BuildEventId_Pattern:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pattern); err != nil {
			return err
		}
	case *BuildEventId_PatternSkipped:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PatternSkipped); err != nil {
			return err
		}
	case *BuildEventId_NamedSet:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NamedSet); err != nil {
			return err
		}
	case *BuildEventId_TargetCompleted:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TargetCompleted); err != nil {
			return err
		}
	case *BuildEventId_ActionCompleted:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ActionCompleted); err != nil {
			return err
		}
	case *BuildEventId_UnconfiguredLabel:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnconfiguredLabel); err != nil {
			return err
		}
	case *BuildEventId_ConfiguredLabel:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfiguredLabel); err != nil {
			return err
		}
	case *BuildEventId_TestResult:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TestResult); err != nil {
			return err
		}
	case *BuildEventId_TestSummary:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TestSummary); err != nil {
			return err
		}
	case *BuildEventId_BuildFinished:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuildFinished); err != nil {
			return err
		}
	case *BuildEventId_BuildToolLogs:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuildToolLogs); err != nil {
			return err
		}
	case *BuildEventId_BuildMetrics:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuildMetrics); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BuildEventId.Id has unexpected type %T", x)
	}
	return nil
}

func _BuildEventId_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BuildEventId)
	switch tag {
	case 1: // id.unknown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_UnknownBuildEventId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_Unknown{msg}
		return true, err
	case 2: // id.progress
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_ProgressId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_Progress{msg}
		return true, err
	case 3: // id.started
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_BuildStartedId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_Started{msg}
		return true, err
	case 11: // id.unstructured_command_line
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_UnstructuredCommandLineId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_UnstructuredCommandLine{msg}
		return true, err
	case 18: // id.structured_command_line
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_StructuredCommandLineId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_StructuredCommandLine{msg}
		return true, err
	case 14: // id.workspace_status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_WorkspaceStatusId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_WorkspaceStatus{msg}
		return true, err
	case 12: // id.options_parsed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_OptionsParsedId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_OptionsParsed{msg}
		return true, err
	case 17: // id.fetch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_FetchId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_Fetch{msg}
		return true, err
	case 15: // id.configuration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_ConfigurationId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_Configuration{msg}
		return true, err
	case 16: // id.target_configured
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_TargetConfiguredId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_TargetConfigured{msg}
		return true, err
	case 4: // id.pattern
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_PatternExpandedId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_Pattern{msg}
		return true, err
	case 10: // id.pattern_skipped
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_PatternExpandedId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_PatternSkipped{msg}
		return true, err
	case 13: // id.named_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_NamedSetOfFilesId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_NamedSet{msg}
		return true, err
	case 5: // id.target_completed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_TargetCompletedId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_TargetCompleted{msg}
		return true, err
	case 6: // id.action_completed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_ActionCompletedId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_ActionCompleted{msg}
		return true, err
	case 19: // id.unconfigured_label
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_UnconfiguredLabelId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_UnconfiguredLabel{msg}
		return true, err
	case 21: // id.configured_label
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_ConfiguredLabelId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_ConfiguredLabel{msg}
		return true, err
	case 8: // id.test_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_TestResultId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_TestResult{msg}
		return true, err
	case 7: // id.test_summary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_TestSummaryId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_TestSummary{msg}
		return true, err
	case 9: // id.build_finished
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_BuildFinishedId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_BuildFinished{msg}
		return true, err
	case 20: // id.build_tool_logs
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_BuildToolLogsId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_BuildToolLogs{msg}
		return true, err
	case 22: // id.build_metrics
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildEventId_BuildMetricsId)
		err := b.DecodeMessage(msg)
		m.Id = &BuildEventId_BuildMetrics{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BuildEventId_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BuildEventId)
	// id
	switch x := m.Id.(type) {
	case *BuildEventId_Unknown:
		s := proto.Size(x.Unknown)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_Progress:
		s := proto.Size(x.Progress)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_Started:
		s := proto.Size(x.Started)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_UnstructuredCommandLine:
		s := proto.Size(x.UnstructuredCommandLine)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_StructuredCommandLine:
		s := proto.Size(x.StructuredCommandLine)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_WorkspaceStatus:
		s := proto.Size(x.WorkspaceStatus)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_OptionsParsed:
		s := proto.Size(x.OptionsParsed)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_Fetch:
		s := proto.Size(x.Fetch)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_Configuration:
		s := proto.Size(x.Configuration)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_TargetConfigured:
		s := proto.Size(x.TargetConfigured)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_Pattern:
		s := proto.Size(x.Pattern)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_PatternSkipped:
		s := proto.Size(x.PatternSkipped)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_NamedSet:
		s := proto.Size(x.NamedSet)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_TargetCompleted:
		s := proto.Size(x.TargetCompleted)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_ActionCompleted:
		s := proto.Size(x.ActionCompleted)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_UnconfiguredLabel:
		s := proto.Size(x.UnconfiguredLabel)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_ConfiguredLabel:
		s := proto.Size(x.ConfiguredLabel)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_TestResult:
		s := proto.Size(x.TestResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_TestSummary:
		s := proto.Size(x.TestSummary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_BuildFinished:
		s := proto.Size(x.BuildFinished)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_BuildToolLogs:
		s := proto.Size(x.BuildToolLogs)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEventId_BuildMetrics:
		s := proto.Size(x.BuildMetrics)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Generic identifier for a build event. This is the default type of
// BuildEventId, but should not be used outside testing; nevertheless,
// tools should handle build events with this kind of id gracefully.
type BuildEventId_UnknownBuildEventId struct {
	Details              string   `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_UnknownBuildEventId) Reset()         { *m = BuildEventId_UnknownBuildEventId{} }
func (m *BuildEventId_UnknownBuildEventId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_UnknownBuildEventId) ProtoMessage()    {}
func (*BuildEventId_UnknownBuildEventId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 0}
}

func (m *BuildEventId_UnknownBuildEventId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_UnknownBuildEventId.Unmarshal(m, b)
}
func (m *BuildEventId_UnknownBuildEventId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_UnknownBuildEventId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_UnknownBuildEventId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_UnknownBuildEventId.Merge(m, src)
}
func (m *BuildEventId_UnknownBuildEventId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_UnknownBuildEventId.Size(m)
}
func (m *BuildEventId_UnknownBuildEventId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_UnknownBuildEventId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_UnknownBuildEventId proto.InternalMessageInfo

func (m *BuildEventId_UnknownBuildEventId) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

// Identifier of an event reporting progress. Those events are also used to
// chain in events that come early.
type BuildEventId_ProgressId struct {
	// Unique identifier. No assumption should be made about how the ids are
	// assigned; the only meaningful operation on this field is test for
	// equality.
	OpaqueCount          int32    `protobuf:"varint,1,opt,name=opaque_count,json=opaqueCount,proto3" json:"opaque_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_ProgressId) Reset()         { *m = BuildEventId_ProgressId{} }
func (m *BuildEventId_ProgressId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_ProgressId) ProtoMessage()    {}
func (*BuildEventId_ProgressId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 1}
}

func (m *BuildEventId_ProgressId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_ProgressId.Unmarshal(m, b)
}
func (m *BuildEventId_ProgressId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_ProgressId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_ProgressId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_ProgressId.Merge(m, src)
}
func (m *BuildEventId_ProgressId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_ProgressId.Size(m)
}
func (m *BuildEventId_ProgressId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_ProgressId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_ProgressId proto.InternalMessageInfo

func (m *BuildEventId_ProgressId) GetOpaqueCount() int32 {
	if m != nil {
		return m.OpaqueCount
	}
	return 0
}

// Identifier of an event indicating the beginning of a build; this will
// normally be the first event.
type BuildEventId_BuildStartedId struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_BuildStartedId) Reset()         { *m = BuildEventId_BuildStartedId{} }
func (m *BuildEventId_BuildStartedId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_BuildStartedId) ProtoMessage()    {}
func (*BuildEventId_BuildStartedId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 2}
}

func (m *BuildEventId_BuildStartedId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_BuildStartedId.Unmarshal(m, b)
}
func (m *BuildEventId_BuildStartedId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_BuildStartedId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_BuildStartedId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_BuildStartedId.Merge(m, src)
}
func (m *BuildEventId_BuildStartedId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_BuildStartedId.Size(m)
}
func (m *BuildEventId_BuildStartedId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_BuildStartedId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_BuildStartedId proto.InternalMessageInfo

// Identifier on an event indicating the original commandline received by
// the bazel server.
type BuildEventId_UnstructuredCommandLineId struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_UnstructuredCommandLineId) Reset() {
	*m = BuildEventId_UnstructuredCommandLineId{}
}
func (m *BuildEventId_UnstructuredCommandLineId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_UnstructuredCommandLineId) ProtoMessage()    {}
func (*BuildEventId_UnstructuredCommandLineId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 3}
}

func (m *BuildEventId_UnstructuredCommandLineId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_UnstructuredCommandLineId.Unmarshal(m, b)
}
func (m *BuildEventId_UnstructuredCommandLineId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_UnstructuredCommandLineId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_UnstructuredCommandLineId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_UnstructuredCommandLineId.Merge(m, src)
}
func (m *BuildEventId_UnstructuredCommandLineId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_UnstructuredCommandLineId.Size(m)
}
func (m *BuildEventId_UnstructuredCommandLineId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_UnstructuredCommandLineId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_UnstructuredCommandLineId proto.InternalMessageInfo

// Identifier on an event describing the commandline received by Bazel.
type BuildEventId_StructuredCommandLineId struct {
	// A title for this command line value, as there may be multiple.
	// For example, a single invocation may wish to report both the literal and
	// canonical command lines, and this label would be used to differentiate
	// between both versions.
	CommandLineLabel     string   `protobuf:"bytes,1,opt,name=command_line_label,json=commandLineLabel,proto3" json:"command_line_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_StructuredCommandLineId) Reset()         { *m = BuildEventId_StructuredCommandLineId{} }
func (m *BuildEventId_StructuredCommandLineId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_StructuredCommandLineId) ProtoMessage()    {}
func (*BuildEventId_StructuredCommandLineId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 4}
}

func (m *BuildEventId_StructuredCommandLineId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_StructuredCommandLineId.Unmarshal(m, b)
}
func (m *BuildEventId_StructuredCommandLineId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_StructuredCommandLineId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_StructuredCommandLineId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_StructuredCommandLineId.Merge(m, src)
}
func (m *BuildEventId_StructuredCommandLineId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_StructuredCommandLineId.Size(m)
}
func (m *BuildEventId_StructuredCommandLineId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_StructuredCommandLineId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_StructuredCommandLineId proto.InternalMessageInfo

func (m *BuildEventId_StructuredCommandLineId) GetCommandLineLabel() string {
	if m != nil {
		return m.CommandLineLabel
	}
	return ""
}

// Identifier of an event indicating the workspace status.
type BuildEventId_WorkspaceStatusId struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_WorkspaceStatusId) Reset()         { *m = BuildEventId_WorkspaceStatusId{} }
func (m *BuildEventId_WorkspaceStatusId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_WorkspaceStatusId) ProtoMessage()    {}
func (*BuildEventId_WorkspaceStatusId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 5}
}

func (m *BuildEventId_WorkspaceStatusId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_WorkspaceStatusId.Unmarshal(m, b)
}
func (m *BuildEventId_WorkspaceStatusId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_WorkspaceStatusId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_WorkspaceStatusId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_WorkspaceStatusId.Merge(m, src)
}
func (m *BuildEventId_WorkspaceStatusId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_WorkspaceStatusId.Size(m)
}
func (m *BuildEventId_WorkspaceStatusId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_WorkspaceStatusId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_WorkspaceStatusId proto.InternalMessageInfo

// Identifier on an event reporting on the options included in the command
// line, both explicitly and implicitly.
type BuildEventId_OptionsParsedId struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_OptionsParsedId) Reset()         { *m = BuildEventId_OptionsParsedId{} }
func (m *BuildEventId_OptionsParsedId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_OptionsParsedId) ProtoMessage()    {}
func (*BuildEventId_OptionsParsedId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 6}
}

func (m *BuildEventId_OptionsParsedId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_OptionsParsedId.Unmarshal(m, b)
}
func (m *BuildEventId_OptionsParsedId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_OptionsParsedId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_OptionsParsedId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_OptionsParsedId.Merge(m, src)
}
func (m *BuildEventId_OptionsParsedId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_OptionsParsedId.Size(m)
}
func (m *BuildEventId_OptionsParsedId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_OptionsParsedId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_OptionsParsedId proto.InternalMessageInfo

// Identifier of an event reporting that an external resource was fetched
// from.
type BuildEventId_FetchId struct {
	// The external resource that was fetched from.
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_FetchId) Reset()         { *m = BuildEventId_FetchId{} }
func (m *BuildEventId_FetchId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_FetchId) ProtoMessage()    {}
func (*BuildEventId_FetchId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 7}
}

func (m *BuildEventId_FetchId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_FetchId.Unmarshal(m, b)
}
func (m *BuildEventId_FetchId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_FetchId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_FetchId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_FetchId.Merge(m, src)
}
func (m *BuildEventId_FetchId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_FetchId.Size(m)
}
func (m *BuildEventId_FetchId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_FetchId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_FetchId proto.InternalMessageInfo

func (m *BuildEventId_FetchId) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// Identifier of an event indicating that a target pattern has been expanded
// further.
// Messages of this shape are also used to describe parts of a pattern that
// have been skipped for some reason, if the actual expansion was still
// carried out (e.g., if keep_going is set). In this case, the
// pattern_skipped choice in the id field is to be made.
type BuildEventId_PatternExpandedId struct {
	Pattern              []string `protobuf:"bytes,1,rep,name=pattern,proto3" json:"pattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_PatternExpandedId) Reset()         { *m = BuildEventId_PatternExpandedId{} }
func (m *BuildEventId_PatternExpandedId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_PatternExpandedId) ProtoMessage()    {}
func (*BuildEventId_PatternExpandedId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 8}
}

func (m *BuildEventId_PatternExpandedId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_PatternExpandedId.Unmarshal(m, b)
}
func (m *BuildEventId_PatternExpandedId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_PatternExpandedId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_PatternExpandedId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_PatternExpandedId.Merge(m, src)
}
func (m *BuildEventId_PatternExpandedId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_PatternExpandedId.Size(m)
}
func (m *BuildEventId_PatternExpandedId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_PatternExpandedId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_PatternExpandedId proto.InternalMessageInfo

func (m *BuildEventId_PatternExpandedId) GetPattern() []string {
	if m != nil {
		return m.Pattern
	}
	return nil
}

// Identifier of an event indicating that a target has been expanded by
// identifying for which configurations it should be build.
type BuildEventId_TargetConfiguredId struct {
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// If not empty, the id refers to the expansion of the target for a given
	// aspect.
	Aspect               string   `protobuf:"bytes,2,opt,name=aspect,proto3" json:"aspect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_TargetConfiguredId) Reset()         { *m = BuildEventId_TargetConfiguredId{} }
func (m *BuildEventId_TargetConfiguredId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_TargetConfiguredId) ProtoMessage()    {}
func (*BuildEventId_TargetConfiguredId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 9}
}

func (m *BuildEventId_TargetConfiguredId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_TargetConfiguredId.Unmarshal(m, b)
}
func (m *BuildEventId_TargetConfiguredId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_TargetConfiguredId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_TargetConfiguredId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_TargetConfiguredId.Merge(m, src)
}
func (m *BuildEventId_TargetConfiguredId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_TargetConfiguredId.Size(m)
}
func (m *BuildEventId_TargetConfiguredId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_TargetConfiguredId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_TargetConfiguredId proto.InternalMessageInfo

func (m *BuildEventId_TargetConfiguredId) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *BuildEventId_TargetConfiguredId) GetAspect() string {
	if m != nil {
		return m.Aspect
	}
	return ""
}

// Identifier of an event introducing a named set of files (usually artifacts)
// to be referred to in later messages.
type BuildEventId_NamedSetOfFilesId struct {
	// Identifier of the file set; this is an opaque string valid only for the
	// particular instance of the event stream.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_NamedSetOfFilesId) Reset()         { *m = BuildEventId_NamedSetOfFilesId{} }
func (m *BuildEventId_NamedSetOfFilesId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_NamedSetOfFilesId) ProtoMessage()    {}
func (*BuildEventId_NamedSetOfFilesId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 10}
}

func (m *BuildEventId_NamedSetOfFilesId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_NamedSetOfFilesId.Unmarshal(m, b)
}
func (m *BuildEventId_NamedSetOfFilesId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_NamedSetOfFilesId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_NamedSetOfFilesId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_NamedSetOfFilesId.Merge(m, src)
}
func (m *BuildEventId_NamedSetOfFilesId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_NamedSetOfFilesId.Size(m)
}
func (m *BuildEventId_NamedSetOfFilesId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_NamedSetOfFilesId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_NamedSetOfFilesId proto.InternalMessageInfo

func (m *BuildEventId_NamedSetOfFilesId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Identifier of an event introducing a configuration.
type BuildEventId_ConfigurationId struct {
	// Identifier of the configuration; users of the protocol should not make
	// any assumptions about it having any structure, or equality of the
	// identifier between different streams.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_ConfigurationId) Reset()         { *m = BuildEventId_ConfigurationId{} }
func (m *BuildEventId_ConfigurationId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_ConfigurationId) ProtoMessage()    {}
func (*BuildEventId_ConfigurationId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 11}
}

func (m *BuildEventId_ConfigurationId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_ConfigurationId.Unmarshal(m, b)
}
func (m *BuildEventId_ConfigurationId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_ConfigurationId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_ConfigurationId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_ConfigurationId.Merge(m, src)
}
func (m *BuildEventId_ConfigurationId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_ConfigurationId.Size(m)
}
func (m *BuildEventId_ConfigurationId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_ConfigurationId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_ConfigurationId proto.InternalMessageInfo

func (m *BuildEventId_ConfigurationId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Identifier of an event indicating that a target was built completely; this
// does not include running the test if the target is a test target.
type BuildEventId_TargetCompletedId struct {
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// The configuration for which the target was built.
	Configuration *BuildEventId_ConfigurationId `protobuf:"bytes,3,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// If not empty, the id refers to the completion of the target for a given
	// aspect.
	Aspect               string   `protobuf:"bytes,2,opt,name=aspect,proto3" json:"aspect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_TargetCompletedId) Reset()         { *m = BuildEventId_TargetCompletedId{} }
func (m *BuildEventId_TargetCompletedId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_TargetCompletedId) ProtoMessage()    {}
func (*BuildEventId_TargetCompletedId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 12}
}

func (m *BuildEventId_TargetCompletedId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_TargetCompletedId.Unmarshal(m, b)
}
func (m *BuildEventId_TargetCompletedId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_TargetCompletedId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_TargetCompletedId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_TargetCompletedId.Merge(m, src)
}
func (m *BuildEventId_TargetCompletedId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_TargetCompletedId.Size(m)
}
func (m *BuildEventId_TargetCompletedId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_TargetCompletedId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_TargetCompletedId proto.InternalMessageInfo

func (m *BuildEventId_TargetCompletedId) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *BuildEventId_TargetCompletedId) GetConfiguration() *BuildEventId_ConfigurationId {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *BuildEventId_TargetCompletedId) GetAspect() string {
	if m != nil {
		return m.Aspect
	}
	return ""
}

// Identifier of an event reporting that an action was completed (not all
// actions are reported, only the ones that can be considered important;
// this includes all failed actions).
type BuildEventId_ActionCompletedId struct {
	PrimaryOutput string `protobuf:"bytes,1,opt,name=primary_output,json=primaryOutput,proto3" json:"primary_output,omitempty"`
	// Optional, the label of the owner of the action, for reference.
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// Optional, the id of the configuration of the action owner.
	Configuration        *BuildEventId_ConfigurationId `protobuf:"bytes,3,opt,name=configuration,proto3" json:"configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BuildEventId_ActionCompletedId) Reset()         { *m = BuildEventId_ActionCompletedId{} }
func (m *BuildEventId_ActionCompletedId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_ActionCompletedId) ProtoMessage()    {}
func (*BuildEventId_ActionCompletedId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 13}
}

func (m *BuildEventId_ActionCompletedId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_ActionCompletedId.Unmarshal(m, b)
}
func (m *BuildEventId_ActionCompletedId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_ActionCompletedId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_ActionCompletedId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_ActionCompletedId.Merge(m, src)
}
func (m *BuildEventId_ActionCompletedId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_ActionCompletedId.Size(m)
}
func (m *BuildEventId_ActionCompletedId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_ActionCompletedId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_ActionCompletedId proto.InternalMessageInfo

func (m *BuildEventId_ActionCompletedId) GetPrimaryOutput() string {
	if m != nil {
		return m.PrimaryOutput
	}
	return ""
}

func (m *BuildEventId_ActionCompletedId) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *BuildEventId_ActionCompletedId) GetConfiguration() *BuildEventId_ConfigurationId {
	if m != nil {
		return m.Configuration
	}
	return nil
}

// Identifier of an event reporting an event associated with an unconfigured
// label. Usually, this indicates a failure due to a missing input file. In
// any case, it will report some form of error (i.e., the payload will be an
// Aborted event); there are no regular events using this identifier. The
// purpose of those events is to serve as the root cause of a failed target.
type BuildEventId_UnconfiguredLabelId struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_UnconfiguredLabelId) Reset()         { *m = BuildEventId_UnconfiguredLabelId{} }
func (m *BuildEventId_UnconfiguredLabelId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_UnconfiguredLabelId) ProtoMessage()    {}
func (*BuildEventId_UnconfiguredLabelId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 14}
}

func (m *BuildEventId_UnconfiguredLabelId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_UnconfiguredLabelId.Unmarshal(m, b)
}
func (m *BuildEventId_UnconfiguredLabelId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_UnconfiguredLabelId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_UnconfiguredLabelId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_UnconfiguredLabelId.Merge(m, src)
}
func (m *BuildEventId_UnconfiguredLabelId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_UnconfiguredLabelId.Size(m)
}
func (m *BuildEventId_UnconfiguredLabelId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_UnconfiguredLabelId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_UnconfiguredLabelId proto.InternalMessageInfo

func (m *BuildEventId_UnconfiguredLabelId) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

// Identifier of an event reporting an event associated with a configured
// label, usually a visibility error. In any case, an event with such an
// id will always report some form of error (i.e., the payload will be an
// Aborted event); there are no regular events using this identifier.
type BuildEventId_ConfiguredLabelId struct {
	Label                string                        `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Configuration        *BuildEventId_ConfigurationId `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BuildEventId_ConfiguredLabelId) Reset()         { *m = BuildEventId_ConfiguredLabelId{} }
func (m *BuildEventId_ConfiguredLabelId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_ConfiguredLabelId) ProtoMessage()    {}
func (*BuildEventId_ConfiguredLabelId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 15}
}

func (m *BuildEventId_ConfiguredLabelId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_ConfiguredLabelId.Unmarshal(m, b)
}
func (m *BuildEventId_ConfiguredLabelId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_ConfiguredLabelId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_ConfiguredLabelId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_ConfiguredLabelId.Merge(m, src)
}
func (m *BuildEventId_ConfiguredLabelId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_ConfiguredLabelId.Size(m)
}
func (m *BuildEventId_ConfiguredLabelId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_ConfiguredLabelId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_ConfiguredLabelId proto.InternalMessageInfo

func (m *BuildEventId_ConfiguredLabelId) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *BuildEventId_ConfiguredLabelId) GetConfiguration() *BuildEventId_ConfigurationId {
	if m != nil {
		return m.Configuration
	}
	return nil
}

// Identifier of an event reporting on an individual test run. The label
// identifies the test that is reported about, the remaining fields are
// in such a way as to uniquely identify the action within a build. In fact,
// attempts for the same test, run, shard triple are counted sequentially,
// starting with 1.
type BuildEventId_TestResultId struct {
	Label                string                        `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Configuration        *BuildEventId_ConfigurationId `protobuf:"bytes,5,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Run                  int32                         `protobuf:"varint,2,opt,name=run,proto3" json:"run,omitempty"`
	Shard                int32                         `protobuf:"varint,3,opt,name=shard,proto3" json:"shard,omitempty"`
	Attempt              int32                         `protobuf:"varint,4,opt,name=attempt,proto3" json:"attempt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BuildEventId_TestResultId) Reset()         { *m = BuildEventId_TestResultId{} }
func (m *BuildEventId_TestResultId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_TestResultId) ProtoMessage()    {}
func (*BuildEventId_TestResultId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 16}
}

func (m *BuildEventId_TestResultId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_TestResultId.Unmarshal(m, b)
}
func (m *BuildEventId_TestResultId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_TestResultId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_TestResultId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_TestResultId.Merge(m, src)
}
func (m *BuildEventId_TestResultId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_TestResultId.Size(m)
}
func (m *BuildEventId_TestResultId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_TestResultId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_TestResultId proto.InternalMessageInfo

func (m *BuildEventId_TestResultId) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *BuildEventId_TestResultId) GetConfiguration() *BuildEventId_ConfigurationId {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *BuildEventId_TestResultId) GetRun() int32 {
	if m != nil {
		return m.Run
	}
	return 0
}

func (m *BuildEventId_TestResultId) GetShard() int32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *BuildEventId_TestResultId) GetAttempt() int32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

// Identifier of an event reporting the summary of a test.
type BuildEventId_TestSummaryId struct {
	Label                string                        `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Configuration        *BuildEventId_ConfigurationId `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BuildEventId_TestSummaryId) Reset()         { *m = BuildEventId_TestSummaryId{} }
func (m *BuildEventId_TestSummaryId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_TestSummaryId) ProtoMessage()    {}
func (*BuildEventId_TestSummaryId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 17}
}

func (m *BuildEventId_TestSummaryId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_TestSummaryId.Unmarshal(m, b)
}
func (m *BuildEventId_TestSummaryId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_TestSummaryId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_TestSummaryId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_TestSummaryId.Merge(m, src)
}
func (m *BuildEventId_TestSummaryId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_TestSummaryId.Size(m)
}
func (m *BuildEventId_TestSummaryId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_TestSummaryId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_TestSummaryId proto.InternalMessageInfo

func (m *BuildEventId_TestSummaryId) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *BuildEventId_TestSummaryId) GetConfiguration() *BuildEventId_ConfigurationId {
	if m != nil {
		return m.Configuration
	}
	return nil
}

// Identifier of the BuildFinished event, indicating the end of a build.
type BuildEventId_BuildFinishedId struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_BuildFinishedId) Reset()         { *m = BuildEventId_BuildFinishedId{} }
func (m *BuildEventId_BuildFinishedId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_BuildFinishedId) ProtoMessage()    {}
func (*BuildEventId_BuildFinishedId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 18}
}

func (m *BuildEventId_BuildFinishedId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_BuildFinishedId.Unmarshal(m, b)
}
func (m *BuildEventId_BuildFinishedId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_BuildFinishedId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_BuildFinishedId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_BuildFinishedId.Merge(m, src)
}
func (m *BuildEventId_BuildFinishedId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_BuildFinishedId.Size(m)
}
func (m *BuildEventId_BuildFinishedId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_BuildFinishedId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_BuildFinishedId proto.InternalMessageInfo

// Identifier of an event providing additional logs/statistics after
// completion of the build.
type BuildEventId_BuildToolLogsId struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_BuildToolLogsId) Reset()         { *m = BuildEventId_BuildToolLogsId{} }
func (m *BuildEventId_BuildToolLogsId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_BuildToolLogsId) ProtoMessage()    {}
func (*BuildEventId_BuildToolLogsId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 19}
}

func (m *BuildEventId_BuildToolLogsId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_BuildToolLogsId.Unmarshal(m, b)
}
func (m *BuildEventId_BuildToolLogsId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_BuildToolLogsId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_BuildToolLogsId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_BuildToolLogsId.Merge(m, src)
}
func (m *BuildEventId_BuildToolLogsId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_BuildToolLogsId.Size(m)
}
func (m *BuildEventId_BuildToolLogsId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_BuildToolLogsId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_BuildToolLogsId proto.InternalMessageInfo

// Identifier of an event providing build metrics after completion
// of the build.
type BuildEventId_BuildMetricsId struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEventId_BuildMetricsId) Reset()         { *m = BuildEventId_BuildMetricsId{} }
func (m *BuildEventId_BuildMetricsId) String() string { return proto.CompactTextString(m) }
func (*BuildEventId_BuildMetricsId) ProtoMessage()    {}
func (*BuildEventId_BuildMetricsId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{0, 20}
}

func (m *BuildEventId_BuildMetricsId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEventId_BuildMetricsId.Unmarshal(m, b)
}
func (m *BuildEventId_BuildMetricsId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEventId_BuildMetricsId.Marshal(b, m, deterministic)
}
func (m *BuildEventId_BuildMetricsId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEventId_BuildMetricsId.Merge(m, src)
}
func (m *BuildEventId_BuildMetricsId) XXX_Size() int {
	return xxx_messageInfo_BuildEventId_BuildMetricsId.Size(m)
}
func (m *BuildEventId_BuildMetricsId) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEventId_BuildMetricsId.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEventId_BuildMetricsId proto.InternalMessageInfo

// Payload of an event summarizing the progress of the build so far. Those
// events are also used to be parents of events where the more logical parent
// event cannot be posted yet as the needed information is not yet complete.
type Progress struct {
	// The next chunk of stdout that bazel produced since the last progress event
	// or the beginning of the build.
	Stdout string `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// The next chunk of stderr that bazel produced since the last progress event
	// or the beginning of the build.
	Stderr               string   `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Progress) Reset()         { *m = Progress{} }
func (m *Progress) String() string { return proto.CompactTextString(m) }
func (*Progress) ProtoMessage()    {}
func (*Progress) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{1}
}

func (m *Progress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Progress.Unmarshal(m, b)
}
func (m *Progress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Progress.Marshal(b, m, deterministic)
}
func (m *Progress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Progress.Merge(m, src)
}
func (m *Progress) XXX_Size() int {
	return xxx_messageInfo_Progress.Size(m)
}
func (m *Progress) XXX_DiscardUnknown() {
	xxx_messageInfo_Progress.DiscardUnknown(m)
}

var xxx_messageInfo_Progress proto.InternalMessageInfo

func (m *Progress) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

func (m *Progress) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

// Payload of an event indicating that an expected event will not come, as
// the build is aborted prematurely for some reason.
type Aborted struct {
	Reason Aborted_AbortReason `protobuf:"varint,1,opt,name=reason,proto3,enum=build_event_stream.Aborted_AbortReason" json:"reason,omitempty"`
	// A human readable description with more details about there reason, where
	// available and useful.
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Aborted) Reset()         { *m = Aborted{} }
func (m *Aborted) String() string { return proto.CompactTextString(m) }
func (*Aborted) ProtoMessage()    {}
func (*Aborted) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{2}
}

func (m *Aborted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aborted.Unmarshal(m, b)
}
func (m *Aborted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aborted.Marshal(b, m, deterministic)
}
func (m *Aborted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aborted.Merge(m, src)
}
func (m *Aborted) XXX_Size() int {
	return xxx_messageInfo_Aborted.Size(m)
}
func (m *Aborted) XXX_DiscardUnknown() {
	xxx_messageInfo_Aborted.DiscardUnknown(m)
}

var xxx_messageInfo_Aborted proto.InternalMessageInfo

func (m *Aborted) GetReason() Aborted_AbortReason {
	if m != nil {
		return m.Reason
	}
	return Aborted_UNKNOWN
}

func (m *Aborted) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Payload of an event indicating the beginning of a new build. Usually, events
// of those type start a new build-event stream. The target pattern requested
// to be build is contained in one of the announced child events; it is an
// invariant that precisely one of the announced child events has a non-empty
// target pattern.
type BuildStarted struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Start of the build in ms since the epoch.
	// TODO(buchgr): Use google.protobuf.TimeStamp once bazel's protoc supports
	// it.
	StartTimeMillis int64 `protobuf:"varint,2,opt,name=start_time_millis,json=startTimeMillis,proto3" json:"start_time_millis,omitempty"`
	// Version of the build tool that is running.
	BuildToolVersion string `protobuf:"bytes,3,opt,name=build_tool_version,json=buildToolVersion,proto3" json:"build_tool_version,omitempty"`
	// A human-readable description of all the non-default option settings
	OptionsDescription string `protobuf:"bytes,4,opt,name=options_description,json=optionsDescription,proto3" json:"options_description,omitempty"`
	// The name of the command that the user invoked.
	Command string `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	// The working directory from which the build tool was invoked.
	WorkingDirectory string `protobuf:"bytes,6,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`
	// The directory of the workspace.
	WorkspaceDirectory string `protobuf:"bytes,7,opt,name=workspace_directory,json=workspaceDirectory,proto3" json:"workspace_directory,omitempty"`
	// The process ID of the Bazel server.
	ServerPid            int64    `protobuf:"varint,8,opt,name=server_pid,json=serverPid,proto3" json:"server_pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildStarted) Reset()         { *m = BuildStarted{} }
func (m *BuildStarted) String() string { return proto.CompactTextString(m) }
func (*BuildStarted) ProtoMessage()    {}
func (*BuildStarted) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{3}
}

func (m *BuildStarted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildStarted.Unmarshal(m, b)
}
func (m *BuildStarted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildStarted.Marshal(b, m, deterministic)
}
func (m *BuildStarted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildStarted.Merge(m, src)
}
func (m *BuildStarted) XXX_Size() int {
	return xxx_messageInfo_BuildStarted.Size(m)
}
func (m *BuildStarted) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildStarted.DiscardUnknown(m)
}

var xxx_messageInfo_BuildStarted proto.InternalMessageInfo

func (m *BuildStarted) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *BuildStarted) GetStartTimeMillis() int64 {
	if m != nil {
		return m.StartTimeMillis
	}
	return 0
}

func (m *BuildStarted) GetBuildToolVersion() string {
	if m != nil {
		return m.BuildToolVersion
	}
	return ""
}

func (m *BuildStarted) GetOptionsDescription() string {
	if m != nil {
		return m.OptionsDescription
	}
	return ""
}

func (m *BuildStarted) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *BuildStarted) GetWorkingDirectory() string {
	if m != nil {
		return m.WorkingDirectory
	}
	return ""
}

func (m *BuildStarted) GetWorkspaceDirectory() string {
	if m != nil {
		return m.WorkspaceDirectory
	}
	return ""
}

func (m *BuildStarted) GetServerPid() int64 {
	if m != nil {
		return m.ServerPid
	}
	return 0
}

// Payload of an event reporting the command-line of the invocation as
// originally received by the server. Note that this is not the command-line
// given by the user, as the client adds information about the invocation,
// like name and relevant entries of rc-files and client environment variables.
// However, it does contain enough information to reproduce the build
// invocation.
type UnstructuredCommandLine struct {
	Args                 []string `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnstructuredCommandLine) Reset()         { *m = UnstructuredCommandLine{} }
func (m *UnstructuredCommandLine) String() string { return proto.CompactTextString(m) }
func (*UnstructuredCommandLine) ProtoMessage()    {}
func (*UnstructuredCommandLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{4}
}

func (m *UnstructuredCommandLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnstructuredCommandLine.Unmarshal(m, b)
}
func (m *UnstructuredCommandLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnstructuredCommandLine.Marshal(b, m, deterministic)
}
func (m *UnstructuredCommandLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnstructuredCommandLine.Merge(m, src)
}
func (m *UnstructuredCommandLine) XXX_Size() int {
	return xxx_messageInfo_UnstructuredCommandLine.Size(m)
}
func (m *UnstructuredCommandLine) XXX_DiscardUnknown() {
	xxx_messageInfo_UnstructuredCommandLine.DiscardUnknown(m)
}

var xxx_messageInfo_UnstructuredCommandLine proto.InternalMessageInfo

func (m *UnstructuredCommandLine) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

// Payload of an event reporting on the parsed options, grouped in various ways.
type OptionsParsed struct {
	StartupOptions         []string                   `protobuf:"bytes,1,rep,name=startup_options,json=startupOptions,proto3" json:"startup_options,omitempty"`
	ExplicitStartupOptions []string                   `protobuf:"bytes,2,rep,name=explicit_startup_options,json=explicitStartupOptions,proto3" json:"explicit_startup_options,omitempty"`
	CmdLine                []string                   `protobuf:"bytes,3,rep,name=cmd_line,json=cmdLine,proto3" json:"cmd_line,omitempty"`
	ExplicitCmdLine        []string                   `protobuf:"bytes,4,rep,name=explicit_cmd_line,json=explicitCmdLine,proto3" json:"explicit_cmd_line,omitempty"`
	InvocationPolicy       *protobuf.InvocationPolicy `protobuf:"bytes,5,opt,name=invocation_policy,json=invocationPolicy,proto3" json:"invocation_policy,omitempty"`
	ToolTag                string                     `protobuf:"bytes,6,opt,name=tool_tag,json=toolTag,proto3" json:"tool_tag,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *OptionsParsed) Reset()         { *m = OptionsParsed{} }
func (m *OptionsParsed) String() string { return proto.CompactTextString(m) }
func (*OptionsParsed) ProtoMessage()    {}
func (*OptionsParsed) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{5}
}

func (m *OptionsParsed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionsParsed.Unmarshal(m, b)
}
func (m *OptionsParsed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionsParsed.Marshal(b, m, deterministic)
}
func (m *OptionsParsed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionsParsed.Merge(m, src)
}
func (m *OptionsParsed) XXX_Size() int {
	return xxx_messageInfo_OptionsParsed.Size(m)
}
func (m *OptionsParsed) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionsParsed.DiscardUnknown(m)
}

var xxx_messageInfo_OptionsParsed proto.InternalMessageInfo

func (m *OptionsParsed) GetStartupOptions() []string {
	if m != nil {
		return m.StartupOptions
	}
	return nil
}

func (m *OptionsParsed) GetExplicitStartupOptions() []string {
	if m != nil {
		return m.ExplicitStartupOptions
	}
	return nil
}

func (m *OptionsParsed) GetCmdLine() []string {
	if m != nil {
		return m.CmdLine
	}
	return nil
}

func (m *OptionsParsed) GetExplicitCmdLine() []string {
	if m != nil {
		return m.ExplicitCmdLine
	}
	return nil
}

func (m *OptionsParsed) GetInvocationPolicy() *protobuf.InvocationPolicy {
	if m != nil {
		return m.InvocationPolicy
	}
	return nil
}

func (m *OptionsParsed) GetToolTag() string {
	if m != nil {
		return m.ToolTag
	}
	return ""
}

// Payload of an event indicating that an external resource was fetched. This
// event will only occur in streams where an actual fetch happened, not in ones
// where a cached copy of the entity to be fetched was used.
type Fetch struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fetch) Reset()         { *m = Fetch{} }
func (m *Fetch) String() string { return proto.CompactTextString(m) }
func (*Fetch) ProtoMessage()    {}
func (*Fetch) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{6}
}

func (m *Fetch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fetch.Unmarshal(m, b)
}
func (m *Fetch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fetch.Marshal(b, m, deterministic)
}
func (m *Fetch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fetch.Merge(m, src)
}
func (m *Fetch) XXX_Size() int {
	return xxx_messageInfo_Fetch.Size(m)
}
func (m *Fetch) XXX_DiscardUnknown() {
	xxx_messageInfo_Fetch.DiscardUnknown(m)
}

var xxx_messageInfo_Fetch proto.InternalMessageInfo

func (m *Fetch) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Payload of an event reporting the workspace status. Key-value pairs can be
// provided by specifying the workspace_status_command to an executable that
// returns one key-value pair per line of output (key and value separated by a
// space).
type WorkspaceStatus struct {
	Item                 []*WorkspaceStatus_Item `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WorkspaceStatus) Reset()         { *m = WorkspaceStatus{} }
func (m *WorkspaceStatus) String() string { return proto.CompactTextString(m) }
func (*WorkspaceStatus) ProtoMessage()    {}
func (*WorkspaceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{7}
}

func (m *WorkspaceStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkspaceStatus.Unmarshal(m, b)
}
func (m *WorkspaceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkspaceStatus.Marshal(b, m, deterministic)
}
func (m *WorkspaceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkspaceStatus.Merge(m, src)
}
func (m *WorkspaceStatus) XXX_Size() int {
	return xxx_messageInfo_WorkspaceStatus.Size(m)
}
func (m *WorkspaceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkspaceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_WorkspaceStatus proto.InternalMessageInfo

func (m *WorkspaceStatus) GetItem() []*WorkspaceStatus_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

type WorkspaceStatus_Item struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkspaceStatus_Item) Reset()         { *m = WorkspaceStatus_Item{} }
func (m *WorkspaceStatus_Item) String() string { return proto.CompactTextString(m) }
func (*WorkspaceStatus_Item) ProtoMessage()    {}
func (*WorkspaceStatus_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{7, 0}
}

func (m *WorkspaceStatus_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkspaceStatus_Item.Unmarshal(m, b)
}
func (m *WorkspaceStatus_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkspaceStatus_Item.Marshal(b, m, deterministic)
}
func (m *WorkspaceStatus_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkspaceStatus_Item.Merge(m, src)
}
func (m *WorkspaceStatus_Item) XXX_Size() int {
	return xxx_messageInfo_WorkspaceStatus_Item.Size(m)
}
func (m *WorkspaceStatus_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkspaceStatus_Item.DiscardUnknown(m)
}

var xxx_messageInfo_WorkspaceStatus_Item proto.InternalMessageInfo

func (m *WorkspaceStatus_Item) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *WorkspaceStatus_Item) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Payload of an event reporting details of a given configuration.
type Configuration struct {
	Mnemonic             string            `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	PlatformName         string            `protobuf:"bytes,2,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`
	Cpu                  string            `protobuf:"bytes,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	MakeVariable         map[string]string `protobuf:"bytes,4,rep,name=make_variable,json=makeVariable,proto3" json:"make_variable,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{8}
}

func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configuration.Unmarshal(m, b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
}
func (m *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(m, src)
}
func (m *Configuration) XXX_Size() int {
	return xxx_messageInfo_Configuration.Size(m)
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func (m *Configuration) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *Configuration) GetPlatformName() string {
	if m != nil {
		return m.PlatformName
	}
	return ""
}

func (m *Configuration) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *Configuration) GetMakeVariable() map[string]string {
	if m != nil {
		return m.MakeVariable
	}
	return nil
}

// Payload of the event indicating the expansion of a target pattern.
// The main information is in the chaining part: the id will contain the
// target pattern that was expanded and the children id will contain the
// target or target pattern it was expanded to.
type PatternExpanded struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PatternExpanded) Reset()         { *m = PatternExpanded{} }
func (m *PatternExpanded) String() string { return proto.CompactTextString(m) }
func (*PatternExpanded) ProtoMessage()    {}
func (*PatternExpanded) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{9}
}

func (m *PatternExpanded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PatternExpanded.Unmarshal(m, b)
}
func (m *PatternExpanded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PatternExpanded.Marshal(b, m, deterministic)
}
func (m *PatternExpanded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PatternExpanded.Merge(m, src)
}
func (m *PatternExpanded) XXX_Size() int {
	return xxx_messageInfo_PatternExpanded.Size(m)
}
func (m *PatternExpanded) XXX_DiscardUnknown() {
	xxx_messageInfo_PatternExpanded.DiscardUnknown(m)
}

var xxx_messageInfo_PatternExpanded proto.InternalMessageInfo

// Payload of the event indicating that the configurations for a target have
// been identified. As with pattern expansion the main information is in the
// chaining part: the id will contain the target that was configured and the
// children id will contain the configured targets it was configured to.
type TargetConfigured struct {
	// The kind of target (e.g.,  e.g. "cc_library rule", "source file",
	// "generated file") where the completion is reported.
	TargetKind string `protobuf:"bytes,1,opt,name=target_kind,json=targetKind,proto3" json:"target_kind,omitempty"`
	// The size of the test, if the target is a test target. Unset otherwise.
	TestSize TestSize `protobuf:"varint,2,opt,name=test_size,json=testSize,proto3,enum=build_event_stream.TestSize" json:"test_size,omitempty"`
	// List of all tags associated with this target (for all possible
	// configurations).
	Tag                  []string `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TargetConfigured) Reset()         { *m = TargetConfigured{} }
func (m *TargetConfigured) String() string { return proto.CompactTextString(m) }
func (*TargetConfigured) ProtoMessage()    {}
func (*TargetConfigured) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{10}
}

func (m *TargetConfigured) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetConfigured.Unmarshal(m, b)
}
func (m *TargetConfigured) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetConfigured.Marshal(b, m, deterministic)
}
func (m *TargetConfigured) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetConfigured.Merge(m, src)
}
func (m *TargetConfigured) XXX_Size() int {
	return xxx_messageInfo_TargetConfigured.Size(m)
}
func (m *TargetConfigured) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetConfigured.DiscardUnknown(m)
}

var xxx_messageInfo_TargetConfigured proto.InternalMessageInfo

func (m *TargetConfigured) GetTargetKind() string {
	if m != nil {
		return m.TargetKind
	}
	return ""
}

func (m *TargetConfigured) GetTestSize() TestSize {
	if m != nil {
		return m.TestSize
	}
	return TestSize_UNKNOWN
}

func (m *TargetConfigured) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

type File struct {
	// identifier indicating the nature of the file (e.g., "stdout", "stderr")
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to File:
	//	*File_Uri
	//	*File_Contents
	File                 isFile_File `protobuf_oneof:"file"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{11}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isFile_File interface {
	isFile_File()
}

type File_Uri struct {
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3,oneof"`
}

type File_Contents struct {
	Contents []byte `protobuf:"bytes,3,opt,name=contents,proto3,oneof"`
}

func (*File_Uri) isFile_File() {}

func (*File_Contents) isFile_File() {}

func (m *File) GetFile() isFile_File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *File) GetUri() string {
	if x, ok := m.GetFile().(*File_Uri); ok {
		return x.Uri
	}
	return ""
}

func (m *File) GetContents() []byte {
	if x, ok := m.GetFile().(*File_Contents); ok {
		return x.Contents
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*File) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _File_OneofMarshaler, _File_OneofUnmarshaler, _File_OneofSizer, []interface{}{
		(*File_Uri)(nil),
		(*File_Contents)(nil),
	}
}

func _File_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*File)
	// file
	switch x := m.File.(type) {
	case *File_Uri:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Uri)
	case *File_Contents:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Contents)
	case nil:
	default:
		return fmt.Errorf("File.File has unexpected type %T", x)
	}
	return nil
}

func _File_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*File)
	switch tag {
	case 2: // file.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.File = &File_Uri{x}
		return true, err
	case 3: // file.contents
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.File = &File_Contents{x}
		return true, err
	default:
		return false, nil
	}
}

func _File_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*File)
	// file
	switch x := m.File.(type) {
	case *File_Uri:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Uri)))
		n += len(x.Uri)
	case *File_Contents:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Contents)))
		n += len(x.Contents)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Payload of a message to describe a set of files, usually build artifacts, to
// be referred to later by their name. In this way, files that occur identically
// as outputs of several targets have to be named only once.
type NamedSetOfFiles struct {
	// Files that belong to this named set of files.
	Files []*File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	// Other named sets whose members also belong to this set.
	FileSets             []*BuildEventId_NamedSetOfFilesId `protobuf:"bytes,2,rep,name=file_sets,json=fileSets,proto3" json:"file_sets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *NamedSetOfFiles) Reset()         { *m = NamedSetOfFiles{} }
func (m *NamedSetOfFiles) String() string { return proto.CompactTextString(m) }
func (*NamedSetOfFiles) ProtoMessage()    {}
func (*NamedSetOfFiles) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{12}
}

func (m *NamedSetOfFiles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NamedSetOfFiles.Unmarshal(m, b)
}
func (m *NamedSetOfFiles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NamedSetOfFiles.Marshal(b, m, deterministic)
}
func (m *NamedSetOfFiles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NamedSetOfFiles.Merge(m, src)
}
func (m *NamedSetOfFiles) XXX_Size() int {
	return xxx_messageInfo_NamedSetOfFiles.Size(m)
}
func (m *NamedSetOfFiles) XXX_DiscardUnknown() {
	xxx_messageInfo_NamedSetOfFiles.DiscardUnknown(m)
}

var xxx_messageInfo_NamedSetOfFiles proto.InternalMessageInfo

func (m *NamedSetOfFiles) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *NamedSetOfFiles) GetFileSets() []*BuildEventId_NamedSetOfFilesId {
	if m != nil {
		return m.FileSets
	}
	return nil
}

// Payload of the event indicating the completion of an action. The main purpose
// of posting those events is to provide details on the root cause for a target
// failing; however, consumers of the build-event protocol must not assume
// that only failed actions are posted.
type ActionExecuted struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// The mnemonic of the action that was executed
	Type string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	// The exit code of the action, if it is available.
	ExitCode int32 `protobuf:"varint,2,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Location where to find the standard output of the action
	// (e.g., a file path).
	Stdout *File `protobuf:"bytes,3,opt,name=stdout,proto3" json:"stdout,omitempty"`
	// Location where to find the standard error of the action
	// (e.g., a file path).
	Stderr *File `protobuf:"bytes,4,opt,name=stderr,proto3" json:"stderr,omitempty"`
	// Deprecated. This field is now present on ActionCompletedId.
	Label string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"` // Deprecated: Do not use.
	// Deprecated. This field is now present on ActionCompletedId.
	Configuration *BuildEventId_ConfigurationId `protobuf:"bytes,7,opt,name=configuration,proto3" json:"configuration,omitempty"` // Deprecated: Do not use.
	// Primary output; only provided for successful actions.
	PrimaryOutput *File `protobuf:"bytes,6,opt,name=primary_output,json=primaryOutput,proto3" json:"primary_output,omitempty"`
	// The command-line of the action, if the action is a command.
	CommandLine          []string `protobuf:"bytes,9,rep,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionExecuted) Reset()         { *m = ActionExecuted{} }
func (m *ActionExecuted) String() string { return proto.CompactTextString(m) }
func (*ActionExecuted) ProtoMessage()    {}
func (*ActionExecuted) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{13}
}

func (m *ActionExecuted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionExecuted.Unmarshal(m, b)
}
func (m *ActionExecuted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionExecuted.Marshal(b, m, deterministic)
}
func (m *ActionExecuted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionExecuted.Merge(m, src)
}
func (m *ActionExecuted) XXX_Size() int {
	return xxx_messageInfo_ActionExecuted.Size(m)
}
func (m *ActionExecuted) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionExecuted.DiscardUnknown(m)
}

var xxx_messageInfo_ActionExecuted proto.InternalMessageInfo

func (m *ActionExecuted) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ActionExecuted) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ActionExecuted) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *ActionExecuted) GetStdout() *File {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *ActionExecuted) GetStderr() *File {
	if m != nil {
		return m.Stderr
	}
	return nil
}

// Deprecated: Do not use.
func (m *ActionExecuted) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

// Deprecated: Do not use.
func (m *ActionExecuted) GetConfiguration() *BuildEventId_ConfigurationId {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *ActionExecuted) GetPrimaryOutput() *File {
	if m != nil {
		return m.PrimaryOutput
	}
	return nil
}

func (m *ActionExecuted) GetCommandLine() []string {
	if m != nil {
		return m.CommandLine
	}
	return nil
}

// Collection of all output files belonging to that output group.
type OutputGroup struct {
	// Name of the output group
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// List of file sets that belong to this output group as well.
	FileSets             []*BuildEventId_NamedSetOfFilesId `protobuf:"bytes,3,rep,name=file_sets,json=fileSets,proto3" json:"file_sets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *OutputGroup) Reset()         { *m = OutputGroup{} }
func (m *OutputGroup) String() string { return proto.CompactTextString(m) }
func (*OutputGroup) ProtoMessage()    {}
func (*OutputGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{14}
}

func (m *OutputGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputGroup.Unmarshal(m, b)
}
func (m *OutputGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputGroup.Marshal(b, m, deterministic)
}
func (m *OutputGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputGroup.Merge(m, src)
}
func (m *OutputGroup) XXX_Size() int {
	return xxx_messageInfo_OutputGroup.Size(m)
}
func (m *OutputGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputGroup.DiscardUnknown(m)
}

var xxx_messageInfo_OutputGroup proto.InternalMessageInfo

func (m *OutputGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OutputGroup) GetFileSets() []*BuildEventId_NamedSetOfFilesId {
	if m != nil {
		return m.FileSets
	}
	return nil
}

// Payload of the event indicating the completion of a target. The target is
// specified in the id. If the target failed the root causes are provided as
// children events.
type TargetComplete struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// The kind of target (e.g.,  e.g. "cc_library rule", "source file",
	// "generated file") where the completion is reported.
	// Deprecated: use the target_kind field in TargetConfigured instead.
	TargetKind string `protobuf:"bytes,5,opt,name=target_kind,json=targetKind,proto3" json:"target_kind,omitempty"` // Deprecated: Do not use.
	// The size of the test, if the target is a test target. Unset otherwise.
	// Deprecated: use the test_size field in TargetConfigured instead.
	TestSize TestSize `protobuf:"varint,6,opt,name=test_size,json=testSize,proto3,enum=build_event_stream.TestSize" json:"test_size,omitempty"` // Deprecated: Do not use.
	// The output files are arranged by their output group. If an output file
	// is part of multiple output groups, it appears once in each output
	// group.
	OutputGroup []*OutputGroup `protobuf:"bytes,2,rep,name=output_group,json=outputGroup,proto3" json:"output_group,omitempty"`
	// Temporarily, also report the important outputs directly. This is only to
	// allow existing clients help transition to the deduplicated representation;
	// new clients should not use it.
	ImportantOutput []*File `protobuf:"bytes,4,rep,name=important_output,json=importantOutput,proto3" json:"important_output,omitempty"` // Deprecated: Do not use.
	// List of tags associated with this configured target.
	Tag []string `protobuf:"bytes,3,rep,name=tag,proto3" json:"tag,omitempty"`
	// The timeout specified for test actions under this configured target.
	TestTimeoutSeconds   int64    `protobuf:"varint,7,opt,name=test_timeout_seconds,json=testTimeoutSeconds,proto3" json:"test_timeout_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TargetComplete) Reset()         { *m = TargetComplete{} }
func (m *TargetComplete) String() string { return proto.CompactTextString(m) }
func (*TargetComplete) ProtoMessage()    {}
func (*TargetComplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{15}
}

func (m *TargetComplete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetComplete.Unmarshal(m, b)
}
func (m *TargetComplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetComplete.Marshal(b, m, deterministic)
}
func (m *TargetComplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetComplete.Merge(m, src)
}
func (m *TargetComplete) XXX_Size() int {
	return xxx_messageInfo_TargetComplete.Size(m)
}
func (m *TargetComplete) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetComplete.DiscardUnknown(m)
}

var xxx_messageInfo_TargetComplete proto.InternalMessageInfo

func (m *TargetComplete) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Deprecated: Do not use.
func (m *TargetComplete) GetTargetKind() string {
	if m != nil {
		return m.TargetKind
	}
	return ""
}

// Deprecated: Do not use.
func (m *TargetComplete) GetTestSize() TestSize {
	if m != nil {
		return m.TestSize
	}
	return TestSize_UNKNOWN
}

func (m *TargetComplete) GetOutputGroup() []*OutputGroup {
	if m != nil {
		return m.OutputGroup
	}
	return nil
}

// Deprecated: Do not use.
func (m *TargetComplete) GetImportantOutput() []*File {
	if m != nil {
		return m.ImportantOutput
	}
	return nil
}

func (m *TargetComplete) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *TargetComplete) GetTestTimeoutSeconds() int64 {
	if m != nil {
		return m.TestTimeoutSeconds
	}
	return 0
}

// Payload on events reporting about individual test action.
type TestResult struct {
	// The status of this test.
	Status TestStatus `protobuf:"varint,5,opt,name=status,proto3,enum=build_event_stream.TestStatus" json:"status,omitempty"`
	// Additional details about the status of the test. This is intended for
	// user display and must not be parsed.
	StatusDetails string `protobuf:"bytes,9,opt,name=status_details,json=statusDetails,proto3" json:"status_details,omitempty"`
	// True, if the reported attempt is taken from the tool's local cache.
	CachedLocally bool `protobuf:"varint,4,opt,name=cached_locally,json=cachedLocally,proto3" json:"cached_locally,omitempty"`
	// Time in milliseconds since the epoch at which the test attempt was started.
	// Note: for cached test results, this is time can be before the start of the
	// build.
	TestAttemptStartMillisEpoch int64 `protobuf:"varint,6,opt,name=test_attempt_start_millis_epoch,json=testAttemptStartMillisEpoch,proto3" json:"test_attempt_start_millis_epoch,omitempty"`
	// Time the test took to run. For locally cached results, this is the time
	// the cached invocation took when it was invoked.
	TestAttemptDurationMillis int64 `protobuf:"varint,3,opt,name=test_attempt_duration_millis,json=testAttemptDurationMillis,proto3" json:"test_attempt_duration_millis,omitempty"`
	// Files (logs, test.xml, undeclared outputs, etc) generated by that test
	// action.
	TestActionOutput []*File `protobuf:"bytes,2,rep,name=test_action_output,json=testActionOutput,proto3" json:"test_action_output,omitempty"`
	// Warnings generated by that test action.
	Warning              []string                  `protobuf:"bytes,7,rep,name=warning,proto3" json:"warning,omitempty"`
	ExecutionInfo        *TestResult_ExecutionInfo `protobuf:"bytes,8,opt,name=execution_info,json=executionInfo,proto3" json:"execution_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *TestResult) Reset()         { *m = TestResult{} }
func (m *TestResult) String() string { return proto.CompactTextString(m) }
func (*TestResult) ProtoMessage()    {}
func (*TestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{16}
}

func (m *TestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult.Unmarshal(m, b)
}
func (m *TestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult.Marshal(b, m, deterministic)
}
func (m *TestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult.Merge(m, src)
}
func (m *TestResult) XXX_Size() int {
	return xxx_messageInfo_TestResult.Size(m)
}
func (m *TestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult proto.InternalMessageInfo

func (m *TestResult) GetStatus() TestStatus {
	if m != nil {
		return m.Status
	}
	return TestStatus_NO_STATUS
}

func (m *TestResult) GetStatusDetails() string {
	if m != nil {
		return m.StatusDetails
	}
	return ""
}

func (m *TestResult) GetCachedLocally() bool {
	if m != nil {
		return m.CachedLocally
	}
	return false
}

func (m *TestResult) GetTestAttemptStartMillisEpoch() int64 {
	if m != nil {
		return m.TestAttemptStartMillisEpoch
	}
	return 0
}

func (m *TestResult) GetTestAttemptDurationMillis() int64 {
	if m != nil {
		return m.TestAttemptDurationMillis
	}
	return 0
}

func (m *TestResult) GetTestActionOutput() []*File {
	if m != nil {
		return m.TestActionOutput
	}
	return nil
}

func (m *TestResult) GetWarning() []string {
	if m != nil {
		return m.Warning
	}
	return nil
}

func (m *TestResult) GetExecutionInfo() *TestResult_ExecutionInfo {
	if m != nil {
		return m.ExecutionInfo
	}
	return nil
}

// Message providing optional meta data on the execution of the test action,
// if available.
type TestResult_ExecutionInfo struct {
	// Deprecated, use TargetComplete.test_timeout_seconds instead.
	TimeoutSeconds int32 `protobuf:"varint,1,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"` // Deprecated: Do not use.
	// Name of the strategy to execute this test action (e.g., "local",
	// "remote")
	Strategy string `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// True, if the reported attempt was a cache hit in a remote cache.
	CachedRemotely bool `protobuf:"varint,6,opt,name=cached_remotely,json=cachedRemotely,proto3" json:"cached_remotely,omitempty"`
	// The exit code of the test action.
	ExitCode int32 `protobuf:"varint,7,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// The hostname of the machine where the test action was executed (in case
	// of remote execution), if known.
	Hostname             string                                    `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	TimingBreakdown      *TestResult_ExecutionInfo_TimingBreakdown `protobuf:"bytes,4,opt,name=timing_breakdown,json=timingBreakdown,proto3" json:"timing_breakdown,omitempty"`
	ResourceUsage        []*TestResult_ExecutionInfo_ResourceUsage `protobuf:"bytes,5,rep,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *TestResult_ExecutionInfo) Reset()         { *m = TestResult_ExecutionInfo{} }
func (m *TestResult_ExecutionInfo) String() string { return proto.CompactTextString(m) }
func (*TestResult_ExecutionInfo) ProtoMessage()    {}
func (*TestResult_ExecutionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{16, 0}
}

func (m *TestResult_ExecutionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult_ExecutionInfo.Unmarshal(m, b)
}
func (m *TestResult_ExecutionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult_ExecutionInfo.Marshal(b, m, deterministic)
}
func (m *TestResult_ExecutionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult_ExecutionInfo.Merge(m, src)
}
func (m *TestResult_ExecutionInfo) XXX_Size() int {
	return xxx_messageInfo_TestResult_ExecutionInfo.Size(m)
}
func (m *TestResult_ExecutionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult_ExecutionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult_ExecutionInfo proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *TestResult_ExecutionInfo) GetTimeoutSeconds() int32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

func (m *TestResult_ExecutionInfo) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *TestResult_ExecutionInfo) GetCachedRemotely() bool {
	if m != nil {
		return m.CachedRemotely
	}
	return false
}

func (m *TestResult_ExecutionInfo) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *TestResult_ExecutionInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *TestResult_ExecutionInfo) GetTimingBreakdown() *TestResult_ExecutionInfo_TimingBreakdown {
	if m != nil {
		return m.TimingBreakdown
	}
	return nil
}

func (m *TestResult_ExecutionInfo) GetResourceUsage() []*TestResult_ExecutionInfo_ResourceUsage {
	if m != nil {
		return m.ResourceUsage
	}
	return nil
}

// Represents a hierarchical timing breakdown of an activity.
// The top level time should be the total time of the activity.
// Invariant: time_millis >= sum of time_millis of all direct children.
type TestResult_ExecutionInfo_TimingBreakdown struct {
	Child                []*TestResult_ExecutionInfo_TimingBreakdown `protobuf:"bytes,1,rep,name=child,proto3" json:"child,omitempty"`
	Name                 string                                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TimeMillis           int64                                       `protobuf:"varint,3,opt,name=time_millis,json=timeMillis,proto3" json:"time_millis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *TestResult_ExecutionInfo_TimingBreakdown) Reset() {
	*m = TestResult_ExecutionInfo_TimingBreakdown{}
}
func (m *TestResult_ExecutionInfo_TimingBreakdown) String() string { return proto.CompactTextString(m) }
func (*TestResult_ExecutionInfo_TimingBreakdown) ProtoMessage()    {}
func (*TestResult_ExecutionInfo_TimingBreakdown) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{16, 0, 0}
}

func (m *TestResult_ExecutionInfo_TimingBreakdown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult_ExecutionInfo_TimingBreakdown.Unmarshal(m, b)
}
func (m *TestResult_ExecutionInfo_TimingBreakdown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult_ExecutionInfo_TimingBreakdown.Marshal(b, m, deterministic)
}
func (m *TestResult_ExecutionInfo_TimingBreakdown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult_ExecutionInfo_TimingBreakdown.Merge(m, src)
}
func (m *TestResult_ExecutionInfo_TimingBreakdown) XXX_Size() int {
	return xxx_messageInfo_TestResult_ExecutionInfo_TimingBreakdown.Size(m)
}
func (m *TestResult_ExecutionInfo_TimingBreakdown) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult_ExecutionInfo_TimingBreakdown.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult_ExecutionInfo_TimingBreakdown proto.InternalMessageInfo

func (m *TestResult_ExecutionInfo_TimingBreakdown) GetChild() []*TestResult_ExecutionInfo_TimingBreakdown {
	if m != nil {
		return m.Child
	}
	return nil
}

func (m *TestResult_ExecutionInfo_TimingBreakdown) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestResult_ExecutionInfo_TimingBreakdown) GetTimeMillis() int64 {
	if m != nil {
		return m.TimeMillis
	}
	return 0
}

type TestResult_ExecutionInfo_ResourceUsage struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                int64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResult_ExecutionInfo_ResourceUsage) Reset() {
	*m = TestResult_ExecutionInfo_ResourceUsage{}
}
func (m *TestResult_ExecutionInfo_ResourceUsage) String() string { return proto.CompactTextString(m) }
func (*TestResult_ExecutionInfo_ResourceUsage) ProtoMessage()    {}
func (*TestResult_ExecutionInfo_ResourceUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{16, 0, 1}
}

func (m *TestResult_ExecutionInfo_ResourceUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResult_ExecutionInfo_ResourceUsage.Unmarshal(m, b)
}
func (m *TestResult_ExecutionInfo_ResourceUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResult_ExecutionInfo_ResourceUsage.Marshal(b, m, deterministic)
}
func (m *TestResult_ExecutionInfo_ResourceUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResult_ExecutionInfo_ResourceUsage.Merge(m, src)
}
func (m *TestResult_ExecutionInfo_ResourceUsage) XXX_Size() int {
	return xxx_messageInfo_TestResult_ExecutionInfo_ResourceUsage.Size(m)
}
func (m *TestResult_ExecutionInfo_ResourceUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResult_ExecutionInfo_ResourceUsage.DiscardUnknown(m)
}

var xxx_messageInfo_TestResult_ExecutionInfo_ResourceUsage proto.InternalMessageInfo

func (m *TestResult_ExecutionInfo_ResourceUsage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestResult_ExecutionInfo_ResourceUsage) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Payload of the event summarizing a test.
// TODO(aehlig): extend event with additional information as soon as we known
// which additional information we need for test summaries.
type TestSummary struct {
	// Wrapper around BlazeTestStatus to support importing that enum to proto3.
	// Overall status of test, accumulated over all runs, shards, and attempts.
	OverallStatus TestStatus `protobuf:"varint,5,opt,name=overall_status,json=overallStatus,proto3,enum=build_event_stream.TestStatus" json:"overall_status,omitempty"`
	// Total number of runs
	TotalRunCount int32 `protobuf:"varint,1,opt,name=total_run_count,json=totalRunCount,proto3" json:"total_run_count,omitempty"`
	// Path to logs of passed runs.
	Passed []*File `protobuf:"bytes,3,rep,name=passed,proto3" json:"passed,omitempty"`
	// Path to logs of failed runs;
	Failed []*File `protobuf:"bytes,4,rep,name=failed,proto3" json:"failed,omitempty"`
	// Total number of cached test actions
	TotalNumCached       int32    `protobuf:"varint,6,opt,name=total_num_cached,json=totalNumCached,proto3" json:"total_num_cached,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestSummary) Reset()         { *m = TestSummary{} }
func (m *TestSummary) String() string { return proto.CompactTextString(m) }
func (*TestSummary) ProtoMessage()    {}
func (*TestSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{17}
}

func (m *TestSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestSummary.Unmarshal(m, b)
}
func (m *TestSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestSummary.Marshal(b, m, deterministic)
}
func (m *TestSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestSummary.Merge(m, src)
}
func (m *TestSummary) XXX_Size() int {
	return xxx_messageInfo_TestSummary.Size(m)
}
func (m *TestSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_TestSummary.DiscardUnknown(m)
}

var xxx_messageInfo_TestSummary proto.InternalMessageInfo

func (m *TestSummary) GetOverallStatus() TestStatus {
	if m != nil {
		return m.OverallStatus
	}
	return TestStatus_NO_STATUS
}

func (m *TestSummary) GetTotalRunCount() int32 {
	if m != nil {
		return m.TotalRunCount
	}
	return 0
}

func (m *TestSummary) GetPassed() []*File {
	if m != nil {
		return m.Passed
	}
	return nil
}

func (m *TestSummary) GetFailed() []*File {
	if m != nil {
		return m.Failed
	}
	return nil
}

func (m *TestSummary) GetTotalNumCached() int32 {
	if m != nil {
		return m.TotalNumCached
	}
	return 0
}

// Event indicating the end of a build.
type BuildFinished struct {
	// If the build succeeded or failed.
	OverallSuccess bool `protobuf:"varint,1,opt,name=overall_success,json=overallSuccess,proto3" json:"overall_success,omitempty"` // Deprecated: Do not use.
	// The overall status of the build. A build was successful iff
	// ExitCode.code equals 0.
	ExitCode *BuildFinished_ExitCode `protobuf:"bytes,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// Time in milliseconds since the epoch.
	// TODO(buchgr): Use google.protobuf.Timestamp once bazel's protoc supports
	// it.
	FinishTimeMillis     int64    `protobuf:"varint,2,opt,name=finish_time_millis,json=finishTimeMillis,proto3" json:"finish_time_millis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildFinished) Reset()         { *m = BuildFinished{} }
func (m *BuildFinished) String() string { return proto.CompactTextString(m) }
func (*BuildFinished) ProtoMessage()    {}
func (*BuildFinished) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{18}
}

func (m *BuildFinished) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildFinished.Unmarshal(m, b)
}
func (m *BuildFinished) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildFinished.Marshal(b, m, deterministic)
}
func (m *BuildFinished) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildFinished.Merge(m, src)
}
func (m *BuildFinished) XXX_Size() int {
	return xxx_messageInfo_BuildFinished.Size(m)
}
func (m *BuildFinished) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildFinished.DiscardUnknown(m)
}

var xxx_messageInfo_BuildFinished proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *BuildFinished) GetOverallSuccess() bool {
	if m != nil {
		return m.OverallSuccess
	}
	return false
}

func (m *BuildFinished) GetExitCode() *BuildFinished_ExitCode {
	if m != nil {
		return m.ExitCode
	}
	return nil
}

func (m *BuildFinished) GetFinishTimeMillis() int64 {
	if m != nil {
		return m.FinishTimeMillis
	}
	return 0
}

// Exit code of a build. The possible values correspond to the predefined
// codes in bazel's lib.ExitCode class, as well as any custom exit code a
// module might define. The predefined exit codes are subject to change (but
// rarely do) and are not part of the public API.
//
// A build was successful iff ExitCode.code equals 0.
type BuildFinished_ExitCode struct {
	// The name of the exit code.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The exit code.
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildFinished_ExitCode) Reset()         { *m = BuildFinished_ExitCode{} }
func (m *BuildFinished_ExitCode) String() string { return proto.CompactTextString(m) }
func (*BuildFinished_ExitCode) ProtoMessage()    {}
func (*BuildFinished_ExitCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{18, 0}
}

func (m *BuildFinished_ExitCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildFinished_ExitCode.Unmarshal(m, b)
}
func (m *BuildFinished_ExitCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildFinished_ExitCode.Marshal(b, m, deterministic)
}
func (m *BuildFinished_ExitCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildFinished_ExitCode.Merge(m, src)
}
func (m *BuildFinished_ExitCode) XXX_Size() int {
	return xxx_messageInfo_BuildFinished_ExitCode.Size(m)
}
func (m *BuildFinished_ExitCode) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildFinished_ExitCode.DiscardUnknown(m)
}

var xxx_messageInfo_BuildFinished_ExitCode proto.InternalMessageInfo

func (m *BuildFinished_ExitCode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BuildFinished_ExitCode) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type BuildMetrics struct {
	ActionSummary        *BuildMetrics_ActionSummary  `protobuf:"bytes,1,opt,name=action_summary,json=actionSummary,proto3" json:"action_summary,omitempty"`
	MemoryMetrics        *BuildMetrics_MemoryMetrics  `protobuf:"bytes,2,opt,name=memory_metrics,json=memoryMetrics,proto3" json:"memory_metrics,omitempty"`
	TargetMetrics        *BuildMetrics_TargetMetrics  `protobuf:"bytes,3,opt,name=target_metrics,json=targetMetrics,proto3" json:"target_metrics,omitempty"`
	PackageMetrics       *BuildMetrics_PackageMetrics `protobuf:"bytes,4,opt,name=package_metrics,json=packageMetrics,proto3" json:"package_metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BuildMetrics) Reset()         { *m = BuildMetrics{} }
func (m *BuildMetrics) String() string { return proto.CompactTextString(m) }
func (*BuildMetrics) ProtoMessage()    {}
func (*BuildMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{19}
}

func (m *BuildMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMetrics.Unmarshal(m, b)
}
func (m *BuildMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMetrics.Marshal(b, m, deterministic)
}
func (m *BuildMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMetrics.Merge(m, src)
}
func (m *BuildMetrics) XXX_Size() int {
	return xxx_messageInfo_BuildMetrics.Size(m)
}
func (m *BuildMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMetrics proto.InternalMessageInfo

func (m *BuildMetrics) GetActionSummary() *BuildMetrics_ActionSummary {
	if m != nil {
		return m.ActionSummary
	}
	return nil
}

func (m *BuildMetrics) GetMemoryMetrics() *BuildMetrics_MemoryMetrics {
	if m != nil {
		return m.MemoryMetrics
	}
	return nil
}

func (m *BuildMetrics) GetTargetMetrics() *BuildMetrics_TargetMetrics {
	if m != nil {
		return m.TargetMetrics
	}
	return nil
}

func (m *BuildMetrics) GetPackageMetrics() *BuildMetrics_PackageMetrics {
	if m != nil {
		return m.PackageMetrics
	}
	return nil
}

type BuildMetrics_ActionSummary struct {
	// The total number of actions created and registered during the build.
	// This includes unused actions that were constructed but
	// not executed during this build.
	ActionsCreated int64 `protobuf:"varint,1,opt,name=actions_created,json=actionsCreated,proto3" json:"actions_created,omitempty"`
	// The total number of actions executed during the build.
	// This includes any remote cache hits, but excludes
	// local action cache hits.
	ActionsExecuted      int64    `protobuf:"varint,2,opt,name=actions_executed,json=actionsExecuted,proto3" json:"actions_executed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildMetrics_ActionSummary) Reset()         { *m = BuildMetrics_ActionSummary{} }
func (m *BuildMetrics_ActionSummary) String() string { return proto.CompactTextString(m) }
func (*BuildMetrics_ActionSummary) ProtoMessage()    {}
func (*BuildMetrics_ActionSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{19, 0}
}

func (m *BuildMetrics_ActionSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMetrics_ActionSummary.Unmarshal(m, b)
}
func (m *BuildMetrics_ActionSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMetrics_ActionSummary.Marshal(b, m, deterministic)
}
func (m *BuildMetrics_ActionSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMetrics_ActionSummary.Merge(m, src)
}
func (m *BuildMetrics_ActionSummary) XXX_Size() int {
	return xxx_messageInfo_BuildMetrics_ActionSummary.Size(m)
}
func (m *BuildMetrics_ActionSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMetrics_ActionSummary.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMetrics_ActionSummary proto.InternalMessageInfo

func (m *BuildMetrics_ActionSummary) GetActionsCreated() int64 {
	if m != nil {
		return m.ActionsCreated
	}
	return 0
}

func (m *BuildMetrics_ActionSummary) GetActionsExecuted() int64 {
	if m != nil {
		return m.ActionsExecuted
	}
	return 0
}

type BuildMetrics_MemoryMetrics struct {
	// Size of the JVM heap post build in bytes. This is only collected if
	// --bep_publish_used_heap_size_post_build is set,
	// since it forces a full GC.
	UsedHeapSizePostBuild int64    `protobuf:"varint,1,opt,name=used_heap_size_post_build,json=usedHeapSizePostBuild,proto3" json:"used_heap_size_post_build,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *BuildMetrics_MemoryMetrics) Reset()         { *m = BuildMetrics_MemoryMetrics{} }
func (m *BuildMetrics_MemoryMetrics) String() string { return proto.CompactTextString(m) }
func (*BuildMetrics_MemoryMetrics) ProtoMessage()    {}
func (*BuildMetrics_MemoryMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{19, 1}
}

func (m *BuildMetrics_MemoryMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMetrics_MemoryMetrics.Unmarshal(m, b)
}
func (m *BuildMetrics_MemoryMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMetrics_MemoryMetrics.Marshal(b, m, deterministic)
}
func (m *BuildMetrics_MemoryMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMetrics_MemoryMetrics.Merge(m, src)
}
func (m *BuildMetrics_MemoryMetrics) XXX_Size() int {
	return xxx_messageInfo_BuildMetrics_MemoryMetrics.Size(m)
}
func (m *BuildMetrics_MemoryMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMetrics_MemoryMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMetrics_MemoryMetrics proto.InternalMessageInfo

func (m *BuildMetrics_MemoryMetrics) GetUsedHeapSizePostBuild() int64 {
	if m != nil {
		return m.UsedHeapSizePostBuild
	}
	return 0
}

type BuildMetrics_TargetMetrics struct {
	// Number of targets loaded during this build.
	TargetsLoaded int64 `protobuf:"varint,1,opt,name=targets_loaded,json=targetsLoaded,proto3" json:"targets_loaded,omitempty"`
	// Number of targets configured during this build. This can
	// be greater than targets_loaded if the same target is configured
	// multiple times.
	TargetsConfigured    int64    `protobuf:"varint,2,opt,name=targets_configured,json=targetsConfigured,proto3" json:"targets_configured,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildMetrics_TargetMetrics) Reset()         { *m = BuildMetrics_TargetMetrics{} }
func (m *BuildMetrics_TargetMetrics) String() string { return proto.CompactTextString(m) }
func (*BuildMetrics_TargetMetrics) ProtoMessage()    {}
func (*BuildMetrics_TargetMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{19, 2}
}

func (m *BuildMetrics_TargetMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMetrics_TargetMetrics.Unmarshal(m, b)
}
func (m *BuildMetrics_TargetMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMetrics_TargetMetrics.Marshal(b, m, deterministic)
}
func (m *BuildMetrics_TargetMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMetrics_TargetMetrics.Merge(m, src)
}
func (m *BuildMetrics_TargetMetrics) XXX_Size() int {
	return xxx_messageInfo_BuildMetrics_TargetMetrics.Size(m)
}
func (m *BuildMetrics_TargetMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMetrics_TargetMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMetrics_TargetMetrics proto.InternalMessageInfo

func (m *BuildMetrics_TargetMetrics) GetTargetsLoaded() int64 {
	if m != nil {
		return m.TargetsLoaded
	}
	return 0
}

func (m *BuildMetrics_TargetMetrics) GetTargetsConfigured() int64 {
	if m != nil {
		return m.TargetsConfigured
	}
	return 0
}

type BuildMetrics_PackageMetrics struct {
	// Number of BUILD files (aka packages) loaded during this build.
	PackagesLoaded       int64    `protobuf:"varint,1,opt,name=packages_loaded,json=packagesLoaded,proto3" json:"packages_loaded,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildMetrics_PackageMetrics) Reset()         { *m = BuildMetrics_PackageMetrics{} }
func (m *BuildMetrics_PackageMetrics) String() string { return proto.CompactTextString(m) }
func (*BuildMetrics_PackageMetrics) ProtoMessage()    {}
func (*BuildMetrics_PackageMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{19, 3}
}

func (m *BuildMetrics_PackageMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMetrics_PackageMetrics.Unmarshal(m, b)
}
func (m *BuildMetrics_PackageMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMetrics_PackageMetrics.Marshal(b, m, deterministic)
}
func (m *BuildMetrics_PackageMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMetrics_PackageMetrics.Merge(m, src)
}
func (m *BuildMetrics_PackageMetrics) XXX_Size() int {
	return xxx_messageInfo_BuildMetrics_PackageMetrics.Size(m)
}
func (m *BuildMetrics_PackageMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMetrics_PackageMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMetrics_PackageMetrics proto.InternalMessageInfo

func (m *BuildMetrics_PackageMetrics) GetPackagesLoaded() int64 {
	if m != nil {
		return m.PackagesLoaded
	}
	return 0
}

// Event providing additional statistics/logs after completion of the build.
type BuildToolLogs struct {
	Log                  []*File  `protobuf:"bytes,1,rep,name=log,proto3" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildToolLogs) Reset()         { *m = BuildToolLogs{} }
func (m *BuildToolLogs) String() string { return proto.CompactTextString(m) }
func (*BuildToolLogs) ProtoMessage()    {}
func (*BuildToolLogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{20}
}

func (m *BuildToolLogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildToolLogs.Unmarshal(m, b)
}
func (m *BuildToolLogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildToolLogs.Marshal(b, m, deterministic)
}
func (m *BuildToolLogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildToolLogs.Merge(m, src)
}
func (m *BuildToolLogs) XXX_Size() int {
	return xxx_messageInfo_BuildToolLogs.Size(m)
}
func (m *BuildToolLogs) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildToolLogs.DiscardUnknown(m)
}

var xxx_messageInfo_BuildToolLogs proto.InternalMessageInfo

func (m *BuildToolLogs) GetLog() []*File {
	if m != nil {
		return m.Log
	}
	return nil
}

// Message describing a build event. Events will have an identifier that
// is unique within a given build invocation; they also announce follow-up
// events as children. More details, which are specific to the kind of event
// that is observed, is provided in the payload. More options for the payload
// might be added in the future.
type BuildEvent struct {
	Id          *BuildEventId   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Children    []*BuildEventId `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
	LastMessage bool            `protobuf:"varint,20,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*BuildEvent_Progress
	//	*BuildEvent_Aborted
	//	*BuildEvent_Started
	//	*BuildEvent_UnstructuredCommandLine
	//	*BuildEvent_StructuredCommandLine
	//	*BuildEvent_OptionsParsed
	//	*BuildEvent_WorkspaceStatus
	//	*BuildEvent_Fetch
	//	*BuildEvent_Configuration
	//	*BuildEvent_Expanded
	//	*BuildEvent_Configured
	//	*BuildEvent_Action
	//	*BuildEvent_NamedSetOfFiles
	//	*BuildEvent_Completed
	//	*BuildEvent_TestResult
	//	*BuildEvent_TestSummary
	//	*BuildEvent_Finished
	//	*BuildEvent_BuildToolLogs
	//	*BuildEvent_BuildMetrics
	Payload              isBuildEvent_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BuildEvent) Reset()         { *m = BuildEvent{} }
func (m *BuildEvent) String() string { return proto.CompactTextString(m) }
func (*BuildEvent) ProtoMessage()    {}
func (*BuildEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f0d1413ac9ce3a4, []int{21}
}

func (m *BuildEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEvent.Unmarshal(m, b)
}
func (m *BuildEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEvent.Marshal(b, m, deterministic)
}
func (m *BuildEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEvent.Merge(m, src)
}
func (m *BuildEvent) XXX_Size() int {
	return xxx_messageInfo_BuildEvent.Size(m)
}
func (m *BuildEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEvent.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEvent proto.InternalMessageInfo

func (m *BuildEvent) GetId() *BuildEventId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *BuildEvent) GetChildren() []*BuildEventId {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *BuildEvent) GetLastMessage() bool {
	if m != nil {
		return m.LastMessage
	}
	return false
}

type isBuildEvent_Payload interface {
	isBuildEvent_Payload()
}

type BuildEvent_Progress struct {
	Progress *Progress `protobuf:"bytes,3,opt,name=progress,proto3,oneof"`
}

type BuildEvent_Aborted struct {
	Aborted *Aborted `protobuf:"bytes,4,opt,name=aborted,proto3,oneof"`
}

type BuildEvent_Started struct {
	Started *BuildStarted `protobuf:"bytes,5,opt,name=started,proto3,oneof"`
}

type BuildEvent_UnstructuredCommandLine struct {
	UnstructuredCommandLine *UnstructuredCommandLine `protobuf:"bytes,12,opt,name=unstructured_command_line,json=unstructuredCommandLine,proto3,oneof"`
}

type BuildEvent_StructuredCommandLine struct {
	StructuredCommandLine *protobuf.CommandLine `protobuf:"bytes,22,opt,name=structured_command_line,json=structuredCommandLine,proto3,oneof"`
}

type BuildEvent_OptionsParsed struct {
	OptionsParsed *OptionsParsed `protobuf:"bytes,13,opt,name=options_parsed,json=optionsParsed,proto3,oneof"`
}

type BuildEvent_WorkspaceStatus struct {
	WorkspaceStatus *WorkspaceStatus `protobuf:"bytes,16,opt,name=workspace_status,json=workspaceStatus,proto3,oneof"`
}

type BuildEvent_Fetch struct {
	Fetch *Fetch `protobuf:"bytes,21,opt,name=fetch,proto3,oneof"`
}

type BuildEvent_Configuration struct {
	Configuration *Configuration `protobuf:"bytes,17,opt,name=configuration,proto3,oneof"`
}

type BuildEvent_Expanded struct {
	Expanded *PatternExpanded `protobuf:"bytes,6,opt,name=expanded,proto3,oneof"`
}

type BuildEvent_Configured struct {
	Configured *TargetConfigured `protobuf:"bytes,18,opt,name=configured,proto3,oneof"`
}

type BuildEvent_Action struct {
	Action *ActionExecuted `protobuf:"bytes,7,opt,name=action,proto3,oneof"`
}

type BuildEvent_NamedSetOfFiles struct {
	NamedSetOfFiles *NamedSetOfFiles `protobuf:"bytes,15,opt,name=named_set_of_files,json=namedSetOfFiles,proto3,oneof"`
}

type BuildEvent_Completed struct {
	Completed *TargetComplete `protobuf:"bytes,8,opt,name=completed,proto3,oneof"`
}

type BuildEvent_TestResult struct {
	TestResult *TestResult `protobuf:"bytes,10,opt,name=test_result,json=testResult,proto3,oneof"`
}

type BuildEvent_TestSummary struct {
	TestSummary *TestSummary `protobuf:"bytes,9,opt,name=test_summary,json=testSummary,proto3,oneof"`
}

type BuildEvent_Finished struct {
	Finished *BuildFinished `protobuf:"bytes,14,opt,name=finished,proto3,oneof"`
}

type BuildEvent_BuildToolLogs struct {
	BuildToolLogs *BuildToolLogs `protobuf:"bytes,23,opt,name=build_tool_logs,json=buildToolLogs,proto3,oneof"`
}

type BuildEvent_BuildMetrics struct {
	BuildMetrics *BuildMetrics `protobuf:"bytes,24,opt,name=build_metrics,json=buildMetrics,proto3,oneof"`
}

func (*BuildEvent_Progress) isBuildEvent_Payload() {}

func (*BuildEvent_Aborted) isBuildEvent_Payload() {}

func (*BuildEvent_Started) isBuildEvent_Payload() {}

func (*BuildEvent_UnstructuredCommandLine) isBuildEvent_Payload() {}

func (*BuildEvent_StructuredCommandLine) isBuildEvent_Payload() {}

func (*BuildEvent_OptionsParsed) isBuildEvent_Payload() {}

func (*BuildEvent_WorkspaceStatus) isBuildEvent_Payload() {}

func (*BuildEvent_Fetch) isBuildEvent_Payload() {}

func (*BuildEvent_Configuration) isBuildEvent_Payload() {}

func (*BuildEvent_Expanded) isBuildEvent_Payload() {}

func (*BuildEvent_Configured) isBuildEvent_Payload() {}

func (*BuildEvent_Action) isBuildEvent_Payload() {}

func (*BuildEvent_NamedSetOfFiles) isBuildEvent_Payload() {}

func (*BuildEvent_Completed) isBuildEvent_Payload() {}

func (*BuildEvent_TestResult) isBuildEvent_Payload() {}

func (*BuildEvent_TestSummary) isBuildEvent_Payload() {}

func (*BuildEvent_Finished) isBuildEvent_Payload() {}

func (*BuildEvent_BuildToolLogs) isBuildEvent_Payload() {}

func (*BuildEvent_BuildMetrics) isBuildEvent_Payload() {}

func (m *BuildEvent) GetPayload() isBuildEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BuildEvent) GetProgress() *Progress {
	if x, ok := m.GetPayload().(*BuildEvent_Progress); ok {
		return x.Progress
	}
	return nil
}

func (m *BuildEvent) GetAborted() *Aborted {
	if x, ok := m.GetPayload().(*BuildEvent_Aborted); ok {
		return x.Aborted
	}
	return nil
}

func (m *BuildEvent) GetStarted() *BuildStarted {
	if x, ok := m.GetPayload().(*BuildEvent_Started); ok {
		return x.Started
	}
	return nil
}

func (m *BuildEvent) GetUnstructuredCommandLine() *UnstructuredCommandLine {
	if x, ok := m.GetPayload().(*BuildEvent_UnstructuredCommandLine); ok {
		return x.UnstructuredCommandLine
	}
	return nil
}

func (m *BuildEvent) GetStructuredCommandLine() *protobuf.CommandLine {
	if x, ok := m.GetPayload().(*BuildEvent_StructuredCommandLine); ok {
		return x.StructuredCommandLine
	}
	return nil
}

func (m *BuildEvent) GetOptionsParsed() *OptionsParsed {
	if x, ok := m.GetPayload().(*BuildEvent_OptionsParsed); ok {
		return x.OptionsParsed
	}
	return nil
}

func (m *BuildEvent) GetWorkspaceStatus() *WorkspaceStatus {
	if x, ok := m.GetPayload().(*BuildEvent_WorkspaceStatus); ok {
		return x.WorkspaceStatus
	}
	return nil
}

func (m *BuildEvent) GetFetch() *Fetch {
	if x, ok := m.GetPayload().(*BuildEvent_Fetch); ok {
		return x.Fetch
	}
	return nil
}

func (m *BuildEvent) GetConfiguration() *Configuration {
	if x, ok := m.GetPayload().(*BuildEvent_Configuration); ok {
		return x.Configuration
	}
	return nil
}

func (m *BuildEvent) GetExpanded() *PatternExpanded {
	if x, ok := m.GetPayload().(*BuildEvent_Expanded); ok {
		return x.Expanded
	}
	return nil
}

func (m *BuildEvent) GetConfigured() *TargetConfigured {
	if x, ok := m.GetPayload().(*BuildEvent_Configured); ok {
		return x.Configured
	}
	return nil
}

func (m *BuildEvent) GetAction() *ActionExecuted {
	if x, ok := m.GetPayload().(*BuildEvent_Action); ok {
		return x.Action
	}
	return nil
}

func (m *BuildEvent) GetNamedSetOfFiles() *NamedSetOfFiles {
	if x, ok := m.GetPayload().(*BuildEvent_NamedSetOfFiles); ok {
		return x.NamedSetOfFiles
	}
	return nil
}

func (m *BuildEvent) GetCompleted() *TargetComplete {
	if x, ok := m.GetPayload().(*BuildEvent_Completed); ok {
		return x.Completed
	}
	return nil
}

func (m *BuildEvent) GetTestResult() *TestResult {
	if x, ok := m.GetPayload().(*BuildEvent_TestResult); ok {
		return x.TestResult
	}
	return nil
}

func (m *BuildEvent) GetTestSummary() *TestSummary {
	if x, ok := m.GetPayload().(*BuildEvent_TestSummary); ok {
		return x.TestSummary
	}
	return nil
}

func (m *BuildEvent) GetFinished() *BuildFinished {
	if x, ok := m.GetPayload().(*BuildEvent_Finished); ok {
		return x.Finished
	}
	return nil
}

func (m *BuildEvent) GetBuildToolLogs() *BuildToolLogs {
	if x, ok := m.GetPayload().(*BuildEvent_BuildToolLogs); ok {
		return x.BuildToolLogs
	}
	return nil
}

func (m *BuildEvent) GetBuildMetrics() *BuildMetrics {
	if x, ok := m.GetPayload().(*BuildEvent_BuildMetrics); ok {
		return x.BuildMetrics
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BuildEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BuildEvent_OneofMarshaler, _BuildEvent_OneofUnmarshaler, _BuildEvent_OneofSizer, []interface{}{
		(*BuildEvent_Progress)(nil),
		(*BuildEvent_Aborted)(nil),
		(*BuildEvent_Started)(nil),
		(*BuildEvent_UnstructuredCommandLine)(nil),
		(*BuildEvent_StructuredCommandLine)(nil),
		(*BuildEvent_OptionsParsed)(nil),
		(*BuildEvent_WorkspaceStatus)(nil),
		(*BuildEvent_Fetch)(nil),
		(*BuildEvent_Configuration)(nil),
		(*BuildEvent_Expanded)(nil),
		(*BuildEvent_Configured)(nil),
		(*BuildEvent_Action)(nil),
		(*BuildEvent_NamedSetOfFiles)(nil),
		(*BuildEvent_Completed)(nil),
		(*BuildEvent_TestResult)(nil),
		(*BuildEvent_TestSummary)(nil),
		(*BuildEvent_Finished)(nil),
		(*BuildEvent_BuildToolLogs)(nil),
		(*BuildEvent_BuildMetrics)(nil),
	}
}

func _BuildEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BuildEvent)
	// payload
	switch x := m.Payload.(type) {
	case *BuildEvent_Progress:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Progress); err != nil {
			return err
		}
	case *BuildEvent_Aborted:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Aborted); err != nil {
			return err
		}
	case *BuildEvent_Started:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Started); err != nil {
			return err
		}
	case *BuildEvent_UnstructuredCommandLine:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnstructuredCommandLine); err != nil {
			return err
		}
	case *BuildEvent_StructuredCommandLine:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StructuredCommandLine); err != nil {
			return err
		}
	case *BuildEvent_OptionsParsed:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OptionsParsed); err != nil {
			return err
		}
	case *BuildEvent_WorkspaceStatus:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WorkspaceStatus); err != nil {
			return err
		}
	case *BuildEvent_Fetch:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Fetch); err != nil {
			return err
		}
	case *BuildEvent_Configuration:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Configuration); err != nil {
			return err
		}
	case *BuildEvent_Expanded:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Expanded); err != nil {
			return err
		}
	case *BuildEvent_Configured:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Configured); err != nil {
			return err
		}
	case *BuildEvent_Action:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Action); err != nil {
			return err
		}
	case *BuildEvent_NamedSetOfFiles:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NamedSetOfFiles); err != nil {
			return err
		}
	case *BuildEvent_Completed:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Completed); err != nil {
			return err
		}
	case *BuildEvent_TestResult:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TestResult); err != nil {
			return err
		}
	case *BuildEvent_TestSummary:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TestSummary); err != nil {
			return err
		}
	case *BuildEvent_Finished:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Finished); err != nil {
			return err
		}
	case *BuildEvent_BuildToolLogs:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuildToolLogs); err != nil {
			return err
		}
	case *BuildEvent_BuildMetrics:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuildMetrics); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BuildEvent.Payload has unexpected type %T", x)
	}
	return nil
}

func _BuildEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BuildEvent)
	switch tag {
	case 3: // payload.progress
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Progress)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Progress{msg}
		return true, err
	case 4: // payload.aborted
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Aborted)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Aborted{msg}
		return true, err
	case 5: // payload.started
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildStarted)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Started{msg}
		return true, err
	case 12: // payload.unstructured_command_line
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnstructuredCommandLine)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_UnstructuredCommandLine{msg}
		return true, err
	case 22: // payload.structured_command_line
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(protobuf.CommandLine)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_StructuredCommandLine{msg}
		return true, err
	case 13: // payload.options_parsed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OptionsParsed)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_OptionsParsed{msg}
		return true, err
	case 16: // payload.workspace_status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WorkspaceStatus)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_WorkspaceStatus{msg}
		return true, err
	case 21: // payload.fetch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Fetch)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Fetch{msg}
		return true, err
	case 17: // payload.configuration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Configuration)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Configuration{msg}
		return true, err
	case 6: // payload.expanded
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PatternExpanded)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Expanded{msg}
		return true, err
	case 18: // payload.configured
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TargetConfigured)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Configured{msg}
		return true, err
	case 7: // payload.action
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ActionExecuted)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Action{msg}
		return true, err
	case 15: // payload.named_set_of_files
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NamedSetOfFiles)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_NamedSetOfFiles{msg}
		return true, err
	case 8: // payload.completed
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TargetComplete)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Completed{msg}
		return true, err
	case 10: // payload.test_result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TestResult)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_TestResult{msg}
		return true, err
	case 9: // payload.test_summary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TestSummary)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_TestSummary{msg}
		return true, err
	case 14: // payload.finished
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildFinished)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_Finished{msg}
		return true, err
	case 23: // payload.build_tool_logs
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildToolLogs)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_BuildToolLogs{msg}
		return true, err
	case 24: // payload.build_metrics
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BuildMetrics)
		err := b.DecodeMessage(msg)
		m.Payload = &BuildEvent_BuildMetrics{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BuildEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BuildEvent)
	// payload
	switch x := m.Payload.(type) {
	case *BuildEvent_Progress:
		s := proto.Size(x.Progress)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Aborted:
		s := proto.Size(x.Aborted)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Started:
		s := proto.Size(x.Started)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_UnstructuredCommandLine:
		s := proto.Size(x.UnstructuredCommandLine)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_StructuredCommandLine:
		s := proto.Size(x.StructuredCommandLine)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_OptionsParsed:
		s := proto.Size(x.OptionsParsed)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_WorkspaceStatus:
		s := proto.Size(x.WorkspaceStatus)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Fetch:
		s := proto.Size(x.Fetch)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Configuration:
		s := proto.Size(x.Configuration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Expanded:
		s := proto.Size(x.Expanded)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Configured:
		s := proto.Size(x.Configured)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Action:
		s := proto.Size(x.Action)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_NamedSetOfFiles:
		s := proto.Size(x.NamedSetOfFiles)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Completed:
		s := proto.Size(x.Completed)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_TestResult:
		s := proto.Size(x.TestResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_TestSummary:
		s := proto.Size(x.TestSummary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_Finished:
		s := proto.Size(x.Finished)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_BuildToolLogs:
		s := proto.Size(x.BuildToolLogs)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BuildEvent_BuildMetrics:
		s := proto.Size(x.BuildMetrics)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterEnum("build_event_stream.TestSize", TestSize_name, TestSize_value)
	proto.RegisterEnum("build_event_stream.TestStatus", TestStatus_name, TestStatus_value)
	proto.RegisterEnum("build_event_stream.Aborted_AbortReason", Aborted_AbortReason_name, Aborted_AbortReason_value)
	proto.RegisterType((*BuildEventId)(nil), "build_event_stream.BuildEventId")
	proto.RegisterType((*BuildEventId_UnknownBuildEventId)(nil), "build_event_stream.BuildEventId.UnknownBuildEventId")
	proto.RegisterType((*BuildEventId_ProgressId)(nil), "build_event_stream.BuildEventId.ProgressId")
	proto.RegisterType((*BuildEventId_BuildStartedId)(nil), "build_event_stream.BuildEventId.BuildStartedId")
	proto.RegisterType((*BuildEventId_UnstructuredCommandLineId)(nil), "build_event_stream.BuildEventId.UnstructuredCommandLineId")
	proto.RegisterType((*BuildEventId_StructuredCommandLineId)(nil), "build_event_stream.BuildEventId.StructuredCommandLineId")
	proto.RegisterType((*BuildEventId_WorkspaceStatusId)(nil), "build_event_stream.BuildEventId.WorkspaceStatusId")
	proto.RegisterType((*BuildEventId_OptionsParsedId)(nil), "build_event_stream.BuildEventId.OptionsParsedId")
	proto.RegisterType((*BuildEventId_FetchId)(nil), "build_event_stream.BuildEventId.FetchId")
	proto.RegisterType((*BuildEventId_PatternExpandedId)(nil), "build_event_stream.BuildEventId.PatternExpandedId")
	proto.RegisterType((*BuildEventId_TargetConfiguredId)(nil), "build_event_stream.BuildEventId.TargetConfiguredId")
	proto.RegisterType((*BuildEventId_NamedSetOfFilesId)(nil), "build_event_stream.BuildEventId.NamedSetOfFilesId")
	proto.RegisterType((*BuildEventId_ConfigurationId)(nil), "build_event_stream.BuildEventId.ConfigurationId")
	proto.RegisterType((*BuildEventId_TargetCompletedId)(nil), "build_event_stream.BuildEventId.TargetCompletedId")
	proto.RegisterType((*BuildEventId_ActionCompletedId)(nil), "build_event_stream.BuildEventId.ActionCompletedId")
	proto.RegisterType((*BuildEventId_UnconfiguredLabelId)(nil), "build_event_stream.BuildEventId.UnconfiguredLabelId")
	proto.RegisterType((*BuildEventId_ConfiguredLabelId)(nil), "build_event_stream.BuildEventId.ConfiguredLabelId")
	proto.RegisterType((*BuildEventId_TestResultId)(nil), "build_event_stream.BuildEventId.TestResultId")
	proto.RegisterType((*BuildEventId_TestSummaryId)(nil), "build_event_stream.BuildEventId.TestSummaryId")
	proto.RegisterType((*BuildEventId_BuildFinishedId)(nil), "build_event_stream.BuildEventId.BuildFinishedId")
	proto.RegisterType((*BuildEventId_BuildToolLogsId)(nil), "build_event_stream.BuildEventId.BuildToolLogsId")
	proto.RegisterType((*BuildEventId_BuildMetricsId)(nil), "build_event_stream.BuildEventId.BuildMetricsId")
	proto.RegisterType((*Progress)(nil), "build_event_stream.Progress")
	proto.RegisterType((*Aborted)(nil), "build_event_stream.Aborted")
	proto.RegisterType((*BuildStarted)(nil), "build_event_stream.BuildStarted")
	proto.RegisterType((*UnstructuredCommandLine)(nil), "build_event_stream.UnstructuredCommandLine")
	proto.RegisterType((*OptionsParsed)(nil), "build_event_stream.OptionsParsed")
	proto.RegisterType((*Fetch)(nil), "build_event_stream.Fetch")
	proto.RegisterType((*WorkspaceStatus)(nil), "build_event_stream.WorkspaceStatus")
	proto.RegisterType((*WorkspaceStatus_Item)(nil), "build_event_stream.WorkspaceStatus.Item")
	proto.RegisterType((*Configuration)(nil), "build_event_stream.Configuration")
	proto.RegisterMapType((map[string]string)(nil), "build_event_stream.Configuration.MakeVariableEntry")
	proto.RegisterType((*PatternExpanded)(nil), "build_event_stream.PatternExpanded")
	proto.RegisterType((*TargetConfigured)(nil), "build_event_stream.TargetConfigured")
	proto.RegisterType((*File)(nil), "build_event_stream.File")
	proto.RegisterType((*NamedSetOfFiles)(nil), "build_event_stream.NamedSetOfFiles")
	proto.RegisterType((*ActionExecuted)(nil), "build_event_stream.ActionExecuted")
	proto.RegisterType((*OutputGroup)(nil), "build_event_stream.OutputGroup")
	proto.RegisterType((*TargetComplete)(nil), "build_event_stream.TargetComplete")
	proto.RegisterType((*TestResult)(nil), "build_event_stream.TestResult")
	proto.RegisterType((*TestResult_ExecutionInfo)(nil), "build_event_stream.TestResult.ExecutionInfo")
	proto.RegisterType((*TestResult_ExecutionInfo_TimingBreakdown)(nil), "build_event_stream.TestResult.ExecutionInfo.TimingBreakdown")
	proto.RegisterType((*TestResult_ExecutionInfo_ResourceUsage)(nil), "build_event_stream.TestResult.ExecutionInfo.ResourceUsage")
	proto.RegisterType((*TestSummary)(nil), "build_event_stream.TestSummary")
	proto.RegisterType((*BuildFinished)(nil), "build_event_stream.BuildFinished")
	proto.RegisterType((*BuildFinished_ExitCode)(nil), "build_event_stream.BuildFinished.ExitCode")
	proto.RegisterType((*BuildMetrics)(nil), "build_event_stream.BuildMetrics")
	proto.RegisterType((*BuildMetrics_ActionSummary)(nil), "build_event_stream.BuildMetrics.ActionSummary")
	proto.RegisterType((*BuildMetrics_MemoryMetrics)(nil), "build_event_stream.BuildMetrics.MemoryMetrics")
	proto.RegisterType((*BuildMetrics_TargetMetrics)(nil), "build_event_stream.BuildMetrics.TargetMetrics")
	proto.RegisterType((*BuildMetrics_PackageMetrics)(nil), "build_event_stream.BuildMetrics.PackageMetrics")
	proto.RegisterType((*BuildToolLogs)(nil), "build_event_stream.BuildToolLogs")
	proto.RegisterType((*BuildEvent)(nil), "build_event_stream.BuildEvent")
}

func init() {
	proto.RegisterFile("src/main/java/com/google/devtools/build/lib/buildeventstream/proto/build_event_stream.proto", fileDescriptor_6f0d1413ac9ce3a4)
}

var fileDescriptor_6f0d1413ac9ce3a4 = []byte{
	// 3439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x3a, 0xcb, 0x6f, 0xdb, 0xc8,
	0x7b, 0xd6, 0xcb, 0x92, 0x3e, 0x5b, 0x12, 0x35, 0x79, 0x29, 0xcc, 0x36, 0x0f, 0x65, 0xdb, 0xdd,
	0x4d, 0x36, 0x72, 0x9a, 0x2d, 0xda, 0x6c, 0x9a, 0x22, 0x95, 0x6d, 0xd9, 0x56, 0x22, 0x4b, 0x2a,
	0x25, 0x67, 0x1f, 0x45, 0x41, 0xd0, 0xe4, 0x58, 0x66, 0x4d, 0x91, 0x2c, 0x39, 0x74, 0xe2, 0x05,
	0x8a, 0xb6, 0x97, 0x1e, 0x7a, 0xec, 0x6d, 0x7b, 0xee, 0xa1, 0x87, 0x5e, 0x0a, 0x14, 0xe8, 0xad,
	0x05, 0x8a, 0xfe, 0x1d, 0xed, 0xb1, 0x7f, 0xc5, 0x0f, 0xf8, 0x61, 0x1e, 0xa4, 0x48, 0x4a, 0x8a,
	0x94, 0xdd, 0xc5, 0x9e, 0xa4, 0xf9, 0xf8, 0x3d, 0x66, 0xbe, 0xf9, 0xe6, 0x7b, 0xcd, 0xc0, 0x9f,
	0xfb, 0x9e, 0xbe, 0x33, 0xd5, 0x4c, 0x7b, 0xe7, 0x2f, 0xb5, 0x4b, 0x6d, 0x47, 0x77, 0xa6, 0x3b,
	0x13, 0xc7, 0x99, 0x58, 0x78, 0xc7, 0xc0, 0x97, 0xc4, 0x71, 0x2c, 0x7f, 0xe7, 0x34, 0x30, 0x2d,
	0x63, 0xc7, 0x32, 0x4f, 0xf9, 0x3f, 0x7c, 0x89, 0x6d, 0xe2, 0x13, 0x0f, 0x6b, 0xd3, 0x1d, 0xd7,
	0x73, 0x88, 0xc3, 0xc1, 0x2a, 0x83, 0xab, 0xfc, 0x43, 0x8b, 0x7d, 0x40, 0x68, 0xfe, 0x8b, 0xfc,
	0x45, 0x24, 0x90, 0xe1, 0x9c, 0x06, 0x67, 0x3b, 0xa6, 0x7d, 0xe9, 0xe8, 0x1a, 0x31, 0x1d, 0x5b,
	0x75, 0x1d, 0xcb, 0xd4, 0xaf, 0x38, 0xb9, 0xfc, 0xe9, 0x3c, 0xaa, 0xee, 0x4c, 0xa7, 0x9a, 0x6d,
	0xa8, 0x96, 0x69, 0x63, 0x8e, 0xd5, 0xfc, 0x77, 0x19, 0xb6, 0x77, 0xa9, 0x9c, 0x0e, 0x15, 0xd3,
	0x35, 0xd0, 0x10, 0x8a, 0x81, 0x7d, 0x61, 0x3b, 0xef, 0xec, 0x46, 0xe6, 0x7e, 0xe6, 0xf3, 0xad,
	0x67, 0x7f, 0xd0, 0x5a, 0x30, 0xc3, 0x38, 0x49, 0xeb, 0x84, 0xe3, 0xc7, 0x61, 0x47, 0x1b, 0x4a,
	0xc8, 0x06, 0x75, 0xa1, 0xe4, 0x7a, 0xce, 0xc4, 0xc3, 0xbe, 0xdf, 0xc8, 0x32, 0x96, 0x8f, 0x57,
	0xb2, 0x1c, 0x0a, 0x02, 0xc6, 0x29, 0x22, 0x47, 0x6f, 0xa0, 0xe8, 0x13, 0xcd, 0x23, 0xd8, 0x68,
	0xe4, 0x18, 0xa7, 0x9d, 0x95, 0x9c, 0xd8, 0x60, 0xc4, 0x89, 0xf8, 0xbc, 0x04, 0x07, 0xf4, 0x1e,
	0x6e, 0x07, 0xb6, 0x4f, 0xbc, 0x40, 0x27, 0x81, 0x87, 0x0d, 0x35, 0xae, 0x9d, 0xc6, 0x16, 0x63,
	0xff, 0x62, 0x8d, 0xb5, 0xcf, 0x38, 0xec, 0x71, 0x06, 0x3d, 0xd3, 0xc6, 0x4c, 0xd2, 0xad, 0x60,
	0xf1, 0x47, 0xe4, 0xc1, 0xad, 0x65, 0x72, 0x11, 0x93, 0xfb, 0x7c, 0xa5, 0xdc, 0xd1, 0x52, 0xa9,
	0x37, 0x16, 0xcb, 0x54, 0x41, 0x7a, 0xe7, 0x78, 0x17, 0xbe, 0xab, 0xe9, 0x58, 0xf5, 0x89, 0x46,
	0x02, 0xbf, 0x51, 0x65, 0xc2, 0x9e, 0xad, 0x14, 0xf6, 0x4d, 0x48, 0x38, 0x62, 0x74, 0x4c, 0x4c,
	0xed, 0x5d, 0x12, 0x88, 0xbe, 0x83, 0xaa, 0xe3, 0x52, 0x33, 0xf4, 0x55, 0x57, 0xf3, 0x7c, 0x6c,
	0x34, 0xb6, 0x19, 0xfb, 0xa7, 0x2b, 0xd9, 0x0f, 0x38, 0xd9, 0x90, 0x51, 0x31, 0xe6, 0x15, 0x27,
	0x0e, 0x42, 0x7f, 0x0a, 0x85, 0x33, 0x4c, 0xf4, 0xf3, 0x46, 0x9d, 0x71, 0xfc, 0x7c, 0x25, 0xc7,
	0x03, 0x8a, 0xcd, 0x38, 0x71, 0x42, 0xf4, 0x2d, 0x54, 0x74, 0xc7, 0x3e, 0x33, 0x27, 0x81, 0xc7,
	0x8e, 0x4a, 0xa3, 0xb6, 0xe6, 0xdc, 0xf6, 0xe2, 0x54, 0x7c, 0x6e, 0x09, 0x46, 0xe8, 0x14, 0xea,
	0x44, 0xf3, 0x26, 0x98, 0xa8, 0x21, 0x1c, 0x1b, 0x0d, 0x89, 0x71, 0xff, 0x6a, 0x25, 0xf7, 0x31,
	0xa3, 0xdc, 0x8b, 0x08, 0x99, 0x00, 0x89, 0xa4, 0xa0, 0xa8, 0x0f, 0x45, 0x57, 0x23, 0x04, 0x7b,
	0x76, 0x23, 0xbf, 0xe6, 0x96, 0x0d, 0x39, 0x7e, 0xe7, 0xbd, 0xab, 0xd9, 0x46, 0x68, 0xf9, 0x82,
	0x09, 0xfa, 0x0b, 0xa8, 0x89, 0xbf, 0xaa, 0x7f, 0x61, 0xba, 0x2e, 0x36, 0x1a, 0xf0, 0x33, 0xf8,
	0x56, 0x05, 0xb3, 0x11, 0xe7, 0x85, 0xfe, 0x0c, 0xca, 0xb6, 0x36, 0xc5, 0x86, 0xea, 0x63, 0xd2,
	0xa8, 0xac, 0xc9, 0xb8, 0x4f, 0x29, 0x46, 0x98, 0x0c, 0xce, 0x0e, 0x4c, 0x0b, 0x8b, 0x83, 0x6f,
	0x0b, 0x20, 0xb5, 0xde, 0x48, 0xcb, 0x53, 0xd7, 0xc2, 0xd4, 0x03, 0x14, 0xd6, 0xe4, 0x1c, 0x2a,
	0x59, 0xd0, 0x71, 0xeb, 0x25, 0x49, 0x20, 0x15, 0xa0, 0xe9, 0xcc, 0x89, 0xce, 0x04, 0x6c, 0xae,
	0x29, 0xa0, 0xcd, 0x08, 0x53, 0x02, 0xb4, 0x24, 0x10, 0x61, 0x40, 0x81, 0x3d, 0x33, 0x11, 0xd5,
	0xd2, 0x4e, 0xb1, 0xd5, 0xb8, 0xb6, 0xb6, 0x8b, 0x9d, 0x91, 0xf6, 0x28, 0x25, 0x13, 0x52, 0x0f,
	0xd2, 0x60, 0xba, 0x8e, 0x39, 0x21, 0x37, 0xd6, 0x5c, 0xc7, 0xde, 0x02, 0x11, 0xb5, 0xb4, 0x80,
	0x21, 0x6c, 0x11, 0xec, 0x13, 0xd5, 0xc3, 0x7e, 0x60, 0x91, 0x46, 0x89, 0xf1, 0x7e, 0xb2, 0x7a,
	0x13, 0xb0, 0x4f, 0x14, 0x46, 0xc2, 0xd8, 0x02, 0x89, 0xc6, 0x68, 0x04, 0xdb, 0x8c, 0xa3, 0x1f,
	0x4c, 0xa7, 0x9a, 0x77, 0xd5, 0x28, 0x32, 0x96, 0xad, 0xb5, 0x58, 0x8e, 0x38, 0x0d, 0xe3, 0xc9,
	0xe6, 0x25, 0x00, 0xd4, 0x1b, 0x71, 0xfa, 0x33, 0xd3, 0x36, 0xfd, 0x73, 0x6c, 0x34, 0xca, 0x6b,
	0x9e, 0x78, 0x36, 0x38, 0x10, 0x54, 0xfc, 0xc4, 0x9f, 0xc6, 0x41, 0xe8, 0x7b, 0xa8, 0x71, 0x1e,
	0x34, 0xc0, 0xab, 0x96, 0x33, 0xf1, 0x1b, 0xd7, 0x3f, 0x86, 0xf7, 0xd8, 0x71, 0xac, 0x9e, 0x33,
	0xf1, 0x63, 0xbc, 0x43, 0x10, 0x7a, 0x0b, 0x1c, 0xa0, 0x4e, 0x31, 0xf1, 0x4c, 0xdd, 0x6f, 0xdc,
	0xfc, 0x98, 0x30, 0x77, 0xcc, 0x89, 0x18, 0xe3, 0xed, 0xd3, 0x18, 0x44, 0xde, 0x81, 0x6b, 0x0b,
	0xa2, 0x34, 0x6a, 0x40, 0xd1, 0xc0, 0x44, 0x33, 0x2d, 0x9f, 0x05, 0xfb, 0xb2, 0x12, 0x0e, 0xe5,
	0x1d, 0x80, 0x59, 0x0c, 0x46, 0x0f, 0x60, 0xdb, 0x71, 0xb5, 0xbf, 0x0a, 0xb0, 0xaa, 0x3b, 0x81,
	0x4d, 0x18, 0x72, 0x41, 0xd9, 0xe2, 0xb0, 0x3d, 0x0a, 0x92, 0x25, 0xa8, 0x26, 0x43, 0xad, 0x7c,
	0x07, 0x6e, 0x2f, 0x8d, 0x8e, 0xf2, 0x21, 0xdc, 0x5a, 0x12, 0xc2, 0xd0, 0x97, 0x80, 0xe2, 0x21,
	0x51, 0x18, 0x31, 0x9f, 0x9f, 0xa4, 0xcf, 0x50, 0x99, 0x3d, 0xca, 0xd7, 0xa0, 0x3e, 0x17, 0x9e,
	0xe4, 0x3a, 0xd4, 0x52, 0x41, 0x45, 0xbe, 0x03, 0x45, 0x11, 0x15, 0x90, 0x04, 0xb9, 0xc0, 0x0b,
	0x39, 0xd2, 0xbf, 0xf2, 0x13, 0xa8, 0xcf, 0x39, 0x36, 0xaa, 0x9c, 0xd0, 0xeb, 0x66, 0xee, 0xe7,
	0xa8, 0x72, 0xc4, 0x50, 0xde, 0x05, 0x34, 0xef, 0xb9, 0xd1, 0x75, 0x28, 0xc4, 0xa7, 0xca, 0x07,
	0xe8, 0x26, 0x6c, 0x6a, 0xbe, 0x8b, 0x75, 0xc2, 0x72, 0x9f, 0xb2, 0x22, 0x46, 0xf2, 0x43, 0xa8,
	0xcf, 0xb9, 0x3c, 0x54, 0x85, 0xac, 0x69, 0x08, 0xfa, 0xac, 0x69, 0xc8, 0x0f, 0xa0, 0x96, 0x0a,
	0x40, 0x73, 0x28, 0x3f, 0x66, 0xa0, 0x3e, 0xe7, 0xe1, 0x96, 0xcc, 0xe5, 0x6d, 0x3a, 0x0a, 0xe6,
	0x7e, 0x5a, 0x14, 0x4c, 0xc7, 0xc0, 0x65, 0x6b, 0xfc, 0x97, 0x0c, 0xd4, 0xe7, 0x9c, 0x23, 0xfa,
	0x5d, 0xa8, 0xba, 0x9e, 0x49, 0x4f, 0xa9, 0xea, 0x04, 0xc4, 0x0d, 0x88, 0x98, 0x64, 0x45, 0x40,
	0x07, 0x0c, 0x38, 0x5b, 0x42, 0xf6, 0x57, 0x58, 0x82, 0xfc, 0x98, 0x1e, 0x90, 0x39, 0x1f, 0xbb,
	0x58, 0x8f, 0xf2, 0xdf, 0x65, 0xa0, 0xbe, 0xb7, 0x1e, 0xee, 0xfc, 0x84, 0xb3, 0xbf, 0xcc, 0x84,
	0xff, 0x33, 0x03, 0xdb, 0x71, 0xa7, 0xba, 0xae, 0xf8, 0xc2, 0x2f, 0xb3, 0xe5, 0x12, 0xe4, 0xbc,
	0x80, 0x2f, 0xa6, 0xa0, 0xd0, 0xbf, 0x54, 0xbe, 0x7f, 0xae, 0x79, 0x3c, 0x33, 0x2f, 0x28, 0x7c,
	0x40, 0x0f, 0x11, 0x3d, 0x34, 0x53, 0x97, 0xb0, 0xd4, 0xa5, 0xa0, 0x84, 0x43, 0xf9, 0xaf, 0xa1,
	0x92, 0xf0, 0xe0, 0xbf, 0xb2, 0xfe, 0xea, 0x50, 0x4b, 0x79, 0xfa, 0x08, 0x34, 0x73, 0xd0, 0x91,
	0x57, 0x8b, 0x3c, 0xeb, 0x6e, 0x9e, 0x9e, 0xbf, 0xe6, 0x0b, 0x28, 0x85, 0xee, 0x91, 0x5a, 0xbf,
	0x4f, 0x0c, 0x27, 0xb2, 0x63, 0x31, 0x12, 0x70, 0xec, 0x79, 0xe1, 0xa9, 0xe0, 0xa3, 0xe6, 0xbf,
	0x65, 0xa1, 0xd8, 0x3e, 0x75, 0x58, 0x0d, 0xf2, 0x0a, 0x36, 0x3d, 0xac, 0xf9, 0x0e, 0x2f, 0xb6,
	0xaa, 0xcf, 0x3e, 0x5b, 0xb4, 0x2c, 0x81, 0xcc, 0x7f, 0x15, 0x86, 0xae, 0x08, 0x32, 0x74, 0x1f,
	0xb6, 0x0c, 0xec, 0xeb, 0x9e, 0xe9, 0x46, 0xca, 0x29, 0x2b, 0x71, 0x50, 0xf3, 0xbf, 0x33, 0xb0,
	0x15, 0xa3, 0x44, 0x5b, 0x50, 0x3c, 0xe9, 0xbf, 0xe9, 0x0f, 0xbe, 0xe9, 0x4b, 0x1b, 0xe8, 0x3a,
	0x48, 0x27, 0xa3, 0x8e, 0xa2, 0x76, 0xfb, 0xe3, 0x8e, 0xa2, 0x9c, 0x0c, 0xc7, 0x9d, 0x7d, 0x29,
	0x83, 0xaa, 0x00, 0xfd, 0x81, 0xda, 0xee, 0xb7, 0x7b, 0xdf, 0x7d, 0xdf, 0x91, 0x4a, 0x68, 0x1b,
	0x4a, 0xfd, 0x81, 0xba, 0x7b, 0xd2, 0xed, 0xed, 0x4b, 0x65, 0x3a, 0x1a, 0x77, 0x8f, 0x3b, 0xea,
	0xe0, 0x64, 0x2c, 0x65, 0xd1, 0x5d, 0x90, 0x95, 0xce, 0xf1, 0x60, 0xdc, 0x51, 0x3b, 0xfd, 0xb7,
	0x5d, 0x65, 0xd0, 0x3f, 0xee, 0xf4, 0xc7, 0xea, 0x41, 0xbb, 0xdb, 0x3b, 0x51, 0x3a, 0x52, 0x8e,
	0x62, 0x33, 0xe6, 0xfd, 0x76, 0x4f, 0xca, 0xa3, 0x6b, 0x50, 0xeb, 0x0d, 0xda, 0xfb, 0xdd, 0xfe,
	0x61, 0x84, 0x52, 0xa0, 0x93, 0x60, 0xb2, 0x46, 0xdd, 0x51, 0x04, 0xdd, 0xa4, 0xf3, 0x1c, 0xbd,
	0xe9, 0x0e, 0x87, 0x9d, 0x7d, 0xa9, 0xd8, 0xfc, 0x9f, 0xac, 0x28, 0x53, 0x45, 0x78, 0x41, 0x08,
	0xf2, 0x41, 0x10, 0x39, 0x42, 0xf6, 0x1f, 0x3d, 0x82, 0x3a, 0xab, 0xed, 0x54, 0x62, 0x4e, 0xb1,
	0x3a, 0x35, 0x2d, 0xcb, 0xe4, 0x15, 0x67, 0x4e, 0xa9, 0xb1, 0x0f, 0x63, 0x73, 0x8a, 0x8f, 0x19,
	0x98, 0x06, 0x99, 0x58, 0x10, 0xbf, 0xc4, 0x9e, 0x1f, 0x3a, 0x93, 0xb2, 0x22, 0x45, 0x31, 0xf9,
	0x2d, 0x87, 0xa3, 0x1d, 0xb8, 0x16, 0xd6, 0x36, 0x71, 0x6d, 0xe7, 0x19, 0x3a, 0x12, 0x9f, 0xf6,
	0x67, 0x5f, 0xa8, 0xd9, 0x8b, 0x48, 0xc5, 0x0e, 0x5c, 0x59, 0x09, 0x87, 0xe8, 0x31, 0xd4, 0x69,
	0xe5, 0x64, 0xda, 0x13, 0xd5, 0x30, 0x3d, 0xac, 0x13, 0xc7, 0xbb, 0x62, 0x99, 0x66, 0x59, 0x91,
	0xc4, 0x87, 0xfd, 0x10, 0x4e, 0xe5, 0xce, 0x8a, 0xb6, 0x19, 0x7a, 0x91, 0xcb, 0x8d, 0x3e, 0xcd,
	0x08, 0x7e, 0x07, 0xc0, 0xc7, 0xde, 0x25, 0xf6, 0x54, 0xd7, 0x34, 0x58, 0x72, 0x96, 0x53, 0xca,
	0x1c, 0x32, 0x34, 0x8d, 0xe6, 0x13, 0xb8, 0xb5, 0x24, 0x24, 0x53, 0x85, 0x6a, 0xde, 0xc4, 0x17,
	0xa1, 0x8e, 0xfd, 0x6f, 0xfe, 0x6b, 0x16, 0x2a, 0x89, 0x38, 0x8a, 0x3e, 0x03, 0xae, 0xc9, 0xc0,
	0x55, 0xc5, 0xaa, 0x05, 0x41, 0x55, 0x80, 0x05, 0x3a, 0x7a, 0x0e, 0x0d, 0xfc, 0xde, 0xb5, 0x4c,
	0xdd, 0xa4, 0x66, 0x9c, 0xa4, 0xc8, 0x32, 0x8a, 0x9b, 0xe1, 0xf7, 0x51, 0x92, 0xf2, 0x36, 0x94,
	0xf4, 0xa9, 0xa8, 0x86, 0x73, 0x3c, 0xee, 0xea, 0x53, 0x3e, 0xc7, 0x47, 0x50, 0x8f, 0x98, 0x46,
	0x38, 0x79, 0x86, 0x53, 0x0b, 0x3f, 0xec, 0x09, 0xdc, 0xb7, 0x50, 0x9f, 0xeb, 0x8c, 0x08, 0xe7,
	0xf7, 0x45, 0xeb, 0xd4, 0xd2, 0x7e, 0xc0, 0xad, 0xf9, 0xce, 0x49, 0x37, 0x82, 0x0c, 0x19, 0x40,
	0x91, 0xcc, 0x14, 0x84, 0x4e, 0x8f, 0x99, 0x0c, 0xd1, 0x26, 0x62, 0xdb, 0x8a, 0x74, 0x3c, 0xd6,
	0x26, 0xcd, 0x07, 0x50, 0x60, 0x29, 0x06, 0xdd, 0x7d, 0x3f, 0xd0, 0x75, 0xec, 0xf3, 0xb4, 0xaa,
	0xa4, 0x84, 0xc3, 0xe6, 0xdf, 0x40, 0x2d, 0x95, 0xad, 0xa0, 0x97, 0x90, 0x37, 0x09, 0x9e, 0x32,
	0x3d, 0x2e, 0xa9, 0x6d, 0x53, 0x24, 0xad, 0x2e, 0xc1, 0x53, 0x85, 0x51, 0xc9, 0x2d, 0xc8, 0xd3,
	0x11, 0xf5, 0xc7, 0x17, 0xf8, 0x2a, 0xcc, 0x69, 0x2e, 0xf0, 0x15, 0x75, 0xa7, 0x97, 0x9a, 0x15,
	0xe0, 0x30, 0x7e, 0xb2, 0x41, 0xf3, 0x37, 0x19, 0xa8, 0x24, 0x3c, 0x23, 0x92, 0xa1, 0x34, 0xb5,
	0xf1, 0xd4, 0xb1, 0x4d, 0x5d, 0x90, 0x47, 0x63, 0xf4, 0x10, 0x2a, 0xae, 0xa5, 0x91, 0x33, 0xc7,
	0x9b, 0xaa, 0xb4, 0x16, 0x13, 0xbc, 0xb6, 0x43, 0x20, 0xcd, 0x60, 0xa8, 0x68, 0xdd, 0x0d, 0xc4,
	0xd9, 0xa1, 0x7f, 0x69, 0xb5, 0x3d, 0xd5, 0x2e, 0xb0, 0x7a, 0xa9, 0x79, 0xa6, 0x76, 0x6a, 0xf1,
	0x3d, 0x5a, 0x52, 0x0f, 0x27, 0x26, 0xd3, 0x3a, 0xd6, 0x2e, 0xf0, 0x5b, 0x41, 0xd5, 0xb1, 0x89,
	0x77, 0xa5, 0x6c, 0x4f, 0x63, 0x20, 0xf9, 0x15, 0xd4, 0xe7, 0x50, 0xd6, 0x5d, 0xfb, 0x8b, 0xec,
	0xf3, 0x4c, 0xb3, 0x0e, 0xb5, 0x54, 0xa6, 0xd7, 0xfc, 0xdb, 0x0c, 0x48, 0xe9, 0x74, 0x0e, 0xdd,
	0x83, 0x2d, 0x51, 0x70, 0x5e, 0x98, 0x76, 0xe8, 0x66, 0x80, 0x83, 0xde, 0x98, 0xb6, 0x81, 0xbe,
	0x86, 0x32, 0xaf, 0x5a, 0xcc, 0x1f, 0xb8, 0x98, 0xea, 0xb3, 0x4f, 0x16, 0xad, 0x8f, 0xc5, 0x38,
	0xf3, 0x07, 0xac, 0x94, 0x88, 0xf8, 0x47, 0xe7, 0x4b, 0xad, 0x87, 0x1b, 0x37, 0xfd, 0xdb, 0x1c,
	0x43, 0x9e, 0xa6, 0x80, 0xf4, 0x10, 0x32, 0x35, 0x0b, 0xaf, 0x46, 0xff, 0x23, 0x44, 0xb3, 0x55,
	0x93, 0xaf, 0xe4, 0x68, 0x83, 0xe6, 0xab, 0x26, 0xfa, 0x04, 0x4a, 0xba, 0x63, 0x13, 0x6c, 0x13,
	0x9f, 0xe9, 0x7d, 0x9b, 0x16, 0xcb, 0x21, 0x64, 0x77, 0x13, 0xf2, 0x67, 0xa6, 0x85, 0x9b, 0xff,
	0x98, 0x81, 0x5a, 0x2a, 0xc7, 0x44, 0x2d, 0x28, 0xd0, 0x6f, 0xbe, 0x30, 0xb7, 0xc6, 0xa2, 0x29,
	0x53, 0x4c, 0x85, 0xa3, 0xa1, 0x01, 0x94, 0xe9, 0x1f, 0x5a, 0xca, 0xf3, 0x83, 0xfb, 0x93, 0x6a,
	0x79, 0xa5, 0x44, 0x99, 0x8c, 0x30, 0xf1, 0x9b, 0x3f, 0xe6, 0xa0, 0xca, 0x73, 0xc2, 0xce, 0x7b,
	0xac, 0x07, 0xd4, 0x97, 0x2f, 0x3d, 0x2e, 0x54, 0x1f, 0xe4, 0xca, 0xc5, 0xcc, 0x91, 0x95, 0x15,
	0xf6, 0x1f, 0xdd, 0x81, 0x32, 0x7e, 0x4f, 0x1d, 0x80, 0x63, 0x60, 0x91, 0x7f, 0x94, 0x28, 0x60,
	0xcf, 0x31, 0x30, 0x7a, 0x1a, 0xc5, 0x62, 0x9e, 0x17, 0x2e, 0x5f, 0x5f, 0x18, 0xa5, 0x9f, 0x46,
	0x51, 0x3a, 0xbf, 0x06, 0x05, 0xf6, 0x3c, 0xd4, 0x08, 0xf3, 0x14, 0xe6, 0xd9, 0x77, 0xb3, 0x8d,
	0x4c, 0x98, 0xab, 0x7c, 0x9f, 0xce, 0x55, 0x8a, 0x3f, 0x2d, 0x57, 0x61, 0x3c, 0x53, 0x09, 0xd7,
	0xab, 0xb9, 0xac, 0x79, 0x73, 0xc5, 0x7c, 0x53, 0xf9, 0xf4, 0x03, 0xd8, 0x4e, 0x74, 0x1a, 0xcb,
	0xcc, 0xfc, 0xb6, 0x62, 0x05, 0x55, 0xf3, 0x3d, 0x6c, 0x71, 0xe4, 0x43, 0xcf, 0x09, 0xdc, 0x85,
	0xd6, 0x98, 0xb0, 0x87, 0xdc, 0xcf, 0xb7, 0x87, 0xd7, 0xf9, 0x52, 0x56, 0xca, 0x35, 0xff, 0x2f,
	0x0b, 0xd5, 0x64, 0x15, 0xf3, 0x01, 0xab, 0x78, 0x98, 0x3c, 0x9b, 0xb3, 0x6d, 0x88, 0x9f, 0xcf,
	0x3f, 0x89, 0x9f, 0xcf, 0xcd, 0xd5, 0xe7, 0x93, 0x31, 0x98, 0x9d, 0xd1, 0x5d, 0xd8, 0xe6, 0x6a,
	0x56, 0x27, 0x54, 0x17, 0xc2, 0xf4, 0xef, 0x2d, 0xe2, 0x10, 0x53, 0x99, 0xb2, 0xe5, 0xc4, 0xf4,
	0x77, 0x08, 0x92, 0x39, 0x75, 0x1d, 0x8f, 0x68, 0x36, 0x09, 0x37, 0x2d, 0xff, 0xe1, 0x63, 0xc7,
	0x66, 0x51, 0x8b, 0xa8, 0xc4, 0xd6, 0xcd, 0x39, 0x0c, 0xf4, 0x14, 0xae, 0xb3, 0xd5, 0xd1, 0x4c,
	0xc7, 0x09, 0x88, 0xea, 0x63, 0xdd, 0xb1, 0x0d, 0x9f, 0x19, 0x5c, 0x4e, 0x41, 0xf4, 0xdb, 0x98,
	0x7f, 0x1a, 0xf1, 0x2f, 0xcd, 0xff, 0x28, 0x01, 0xcc, 0xea, 0x05, 0xf4, 0x87, 0xd4, 0xec, 0x59,
	0x13, 0xb8, 0xc0, 0x74, 0x73, 0x77, 0xa9, 0x6e, 0x18, 0x96, 0x22, 0xb0, 0x69, 0xf1, 0xc6, 0xff,
	0xa9, 0x61, 0xe3, 0xa0, 0xcc, 0x8b, 0x37, 0x0e, 0xdd, 0xe7, 0x40, 0x8a, 0xa6, 0x6b, 0xfa, 0x39,
	0x36, 0x54, 0xcb, 0xd1, 0x35, 0xcb, 0xba, 0x62, 0xa7, 0xab, 0xa4, 0x54, 0x38, 0xb4, 0xc7, 0x81,
	0x68, 0x1f, 0xee, 0xb1, 0x65, 0x88, 0x9a, 0x80, 0x67, 0x0a, 0x22, 0x73, 0x53, 0xb1, 0xeb, 0xe8,
	0xe7, 0x6c, 0xeb, 0x72, 0xca, 0x1d, 0x8a, 0xd6, 0xe6, 0x58, 0x2c, 0x5f, 0xe0, 0x69, 0x5c, 0x87,
	0xa2, 0xa0, 0x57, 0xf0, 0x49, 0x82, 0x8b, 0x21, 0xce, 0x4c, 0x98, 0x02, 0xe6, 0x18, 0x8b, 0xdb,
	0x31, 0x16, 0xfb, 0x02, 0x43, 0x24, 0x83, 0x07, 0x80, 0x38, 0x03, 0xde, 0x01, 0x14, 0x5b, 0x95,
	0x5d, 0xe1, 0x21, 0x25, 0xc6, 0x90, 0x91, 0x88, 0x7d, 0x6a, 0x40, 0xf1, 0x9d, 0xe6, 0xd9, 0xa6,
	0x3d, 0x69, 0x14, 0x79, 0xe6, 0x22, 0x86, 0x68, 0x04, 0x55, 0xcc, 0xdc, 0x1d, 0xe5, 0x6f, 0xda,
	0x67, 0x8e, 0x68, 0x9c, 0x7d, 0xb9, 0x4c, 0xed, 0x7c, 0x9b, 0x5a, 0x9d, 0x90, 0xa8, 0x6b, 0x9f,
	0x39, 0x4a, 0x05, 0xc7, 0x87, 0xf2, 0xff, 0xe6, 0xa1, 0x92, 0x40, 0x40, 0x8f, 0xa1, 0x96, 0xb6,
	0x08, 0xd6, 0xaa, 0x61, 0x66, 0x55, 0x25, 0x09, 0x8b, 0xa0, 0x81, 0xdf, 0x27, 0x9e, 0x46, 0xf0,
	0xe4, 0x4a, 0xc4, 0xc9, 0x68, 0x4c, 0xf3, 0x3c, 0xb1, 0x7f, 0x1e, 0x9e, 0x3a, 0x04, 0x5b, 0x3c,
	0x47, 0x2d, 0x29, 0x62, 0x5b, 0x15, 0x01, 0x4d, 0x7a, 0xe3, 0x62, 0xca, 0x1b, 0xcb, 0x50, 0x3a,
	0x77, 0x7c, 0xc2, 0x9c, 0x08, 0x4f, 0x0f, 0xa2, 0x31, 0x9a, 0x80, 0x44, 0xcc, 0x29, 0x4d, 0x83,
	0x4f, 0x3d, 0xac, 0x5d, 0x18, 0xce, 0xbb, 0xb0, 0xb9, 0xfd, 0xf2, 0x63, 0x74, 0xd2, 0x1a, 0x33,
	0x26, 0xbb, 0x21, 0x0f, 0xa5, 0x46, 0x92, 0x00, 0xa4, 0x41, 0xd5, 0xc3, 0xbe, 0x13, 0x78, 0x3a,
	0x56, 0x03, 0x5f, 0x9b, 0xe0, 0x46, 0x81, 0x6d, 0xec, 0x8b, 0x8f, 0x12, 0xa3, 0x08, 0x16, 0x27,
	0x94, 0x83, 0x52, 0xf1, 0xe2, 0x43, 0xf9, 0x9f, 0x32, 0x50, 0x4b, 0xcd, 0x03, 0x29, 0x50, 0xd0,
	0xcf, 0x4d, 0xcb, 0x10, 0x81, 0xf6, 0xe7, 0x2d, 0x8a, 0xb3, 0x8a, 0x1c, 0x72, 0x36, 0xe6, 0x90,
	0x69, 0xa2, 0x12, 0x2b, 0x77, 0xb8, 0xad, 0x03, 0x89, 0x2a, 0x1d, 0xf9, 0x6b, 0xa8, 0x24, 0x26,
	0xbf, 0xd0, 0xad, 0x27, 0x12, 0xa6, 0x9c, 0x48, 0x98, 0x5e, 0xe7, 0x4b, 0x19, 0x29, 0xdb, 0xfc,
	0x87, 0x2c, 0x6c, 0xc5, 0x2a, 0x75, 0xd4, 0x81, 0xaa, 0x73, 0x89, 0x3d, 0xcd, 0xb2, 0xd4, 0x8f,
	0x72, 0x21, 0x15, 0x41, 0x25, 0xf2, 0xde, 0xdf, 0x83, 0x1a, 0x71, 0x88, 0x66, 0xa9, 0x5e, 0x60,
	0x27, 0xda, 0x8a, 0x15, 0x06, 0x56, 0x02, 0x9b, 0x35, 0x16, 0x69, 0x80, 0x76, 0x35, 0xdf, 0x67,
	0x57, 0x7e, 0x1f, 0x3e, 0x90, 0x02, 0x8f, 0x52, 0x9c, 0x69, 0xa6, 0x85, 0x8d, 0x55, 0xde, 0x56,
	0x11, 0x78, 0xe8, 0x73, 0x90, 0xf8, 0x5c, 0xec, 0x60, 0xaa, 0x72, 0x0b, 0x67, 0xf6, 0x5e, 0x50,
	0xaa, 0x0c, 0xde, 0x0f, 0xa6, 0x7b, 0x0c, 0xda, 0xfc, 0xff, 0x0c, 0x54, 0x12, 0x7d, 0x03, 0x7a,
	0xe6, 0x22, 0x75, 0xc4, 0xe3, 0x15, 0x3f, 0x73, 0xe1, 0x9a, 0x45, 0xe8, 0x3a, 0x8c, 0x1f, 0x17,
	0x9e, 0xa2, 0x3c, 0x5a, 0x1a, 0x3e, 0x43, 0x11, 0xad, 0x8e, 0x38, 0x50, 0xb1, 0xa3, 0xf5, 0x25,
	0x20, 0xde, 0xd9, 0x5e, 0x50, 0xec, 0x4a, 0xfc, 0xcb, 0xac, 0xda, 0x95, 0x9f, 0x41, 0x29, 0xe4,
	0xb1, 0x24, 0xc7, 0xcc, 0xc7, 0xd2, 0x29, 0xf6, 0xbf, 0xf9, 0x5f, 0x05, 0x51, 0x72, 0x8b, 0xde,
	0x07, 0x3a, 0x81, 0xaa, 0x70, 0x90, 0x61, 0xa7, 0x3e, 0xb3, 0xa2, 0x53, 0x2f, 0x28, 0xc5, 0x05,
	0x89, 0xb0, 0x1f, 0xa5, 0xa2, 0xc5, 0x87, 0x94, 0xed, 0x14, 0x4f, 0x1d, 0xef, 0x2a, 0xea, 0x79,
	0x67, 0xd7, 0x64, 0x7b, 0xcc, 0xc8, 0xc4, 0x48, 0xa9, 0x4c, 0xe3, 0x43, 0xca, 0x56, 0x24, 0x09,
	0x21, 0xdb, 0xdc, 0x9a, 0x6c, 0x79, 0x1e, 0x12, 0xb1, 0x25, 0xf1, 0x21, 0xfa, 0x16, 0x6a, 0xae,
	0xa6, 0x5f, 0x68, 0x13, 0x1c, 0xf1, 0xcd, 0xaf, 0x68, 0xd1, 0x87, 0x7c, 0x87, 0x9c, 0x2e, 0x64,
	0x5c, 0x75, 0x13, 0x63, 0x59, 0x87, 0x4a, 0x42, 0x4f, 0xd4, 0x07, 0x73, 0x4d, 0xf9, 0xaa, 0xee,
	0x61, 0x8d, 0x60, 0x5e, 0x86, 0xe4, 0x14, 0xb1, 0x0d, 0xfe, 0x1e, 0x87, 0xa2, 0x2f, 0xc2, 0xbb,
	0x2b, 0x5f, 0xc5, 0x22, 0xa7, 0x0e, 0xdb, 0x1e, 0x02, 0x1e, 0xa6, 0xda, 0x72, 0x17, 0x2a, 0x09,
	0xad, 0xa1, 0xe7, 0x70, 0x3b, 0xf0, 0xb1, 0xa1, 0x9e, 0x63, 0xcd, 0x65, 0xb9, 0x92, 0xea, 0x3a,
	0x3e, 0x51, 0xd9, 0x5a, 0x84, 0xb8, 0x1b, 0x14, 0xe1, 0x08, 0x6b, 0x2e, 0x4d, 0x8c, 0x86, 0x8e,
	0x4f, 0xd8, 0xaa, 0x64, 0x0c, 0x95, 0x84, 0xa6, 0x68, 0xcc, 0xe7, 0xba, 0xf2, 0x55, 0xcb, 0xd1,
	0x8c, 0x68, 0xba, 0x42, 0x83, 0x7e, 0x8f, 0x01, 0xd1, 0x13, 0x40, 0x21, 0x5a, 0xec, 0xc6, 0x94,
	0xcf, 0x57, 0x5c, 0xa5, 0xfa, 0xb3, 0x42, 0x4c, 0xfe, 0x1a, 0xaa, 0x49, 0xc5, 0x51, 0xbd, 0x08,
	0xd5, 0xa5, 0x04, 0x85, 0x1a, 0x15, 0x92, 0x9a, 0x7f, 0x2c, 0x8e, 0x6a, 0x74, 0xbb, 0xf2, 0x08,
	0x72, 0x96, 0x33, 0x59, 0x59, 0xfa, 0x50, 0xa4, 0xe6, 0xdf, 0x6f, 0x03, 0xcc, 0x92, 0x58, 0xf4,
	0x34, 0x6a, 0xbb, 0x6f, 0x3d, 0xbb, 0xbf, 0x2a, 0xe1, 0x55, 0xb2, 0xa6, 0x81, 0x5e, 0x42, 0x89,
	0x79, 0x6d, 0x0f, 0xdb, 0x22, 0x95, 0x58, 0x4d, 0x17, 0x51, 0xd0, 0x6c, 0xdd, 0xd2, 0x7c, 0x6a,
	0xbc, 0x3e, 0x8b, 0x59, 0xd7, 0x59, 0xf4, 0xdd, 0xa2, 0xb0, 0x63, 0x0e, 0x42, 0x2f, 0x62, 0xef,
	0x2a, 0xb8, 0x6d, 0x2f, 0x4c, 0x70, 0xc3, 0x3e, 0x65, 0xe2, 0x21, 0xc5, 0x1f, 0x41, 0x51, 0xe3,
	0x5d, 0x45, 0x61, 0xbe, 0x77, 0x3e, 0xd0, 0x78, 0x3c, 0xda, 0x50, 0x42, 0x6c, 0xf4, 0x72, 0xf6,
	0x02, 0xa3, 0xb0, 0x42, 0x19, 0xa2, 0x55, 0x17, 0x7f, 0x72, 0x61, 0x7e, 0xe8, 0xc9, 0xc5, 0xf6,
	0xf2, 0xb7, 0x21, 0x4b, 0x9a, 0x56, 0x1f, 0x7a, 0x63, 0x31, 0x5a, 0xfe, 0xc6, 0x82, 0xdf, 0xa9,
	0xdd, 0x6e, 0x25, 0x9e, 0xc3, 0x24, 0xd9, 0x2e, 0x79, 0x44, 0xf1, 0x7a, 0xee, 0x8d, 0x03, 0xbf,
	0xde, 0x7e, 0xb0, 0xb0, 0x2e, 0x88, 0x77, 0xce, 0xe6, 0x1f, 0x35, 0x0c, 0x17, 0x3c, 0xc8, 0xe0,
	0xef, 0x06, 0x1e, 0xae, 0xd1, 0x03, 0x5a, 0xf4, 0x02, 0xe3, 0xf7, 0xc3, 0x67, 0x12, 0x37, 0xc4,
	0x02, 0x17, 0x19, 0x38, 0x45, 0x98, 0xbd, 0x8b, 0xe8, 0xa6, 0x2b, 0xd6, 0xfa, 0xf2, 0xf5, 0x24,
	0x8a, 0xd4, 0xf9, 0x87, 0x10, 0x6d, 0x28, 0x61, 0xd1, 0x52, 0x11, 0xa5, 0xe9, 0xc2, 0x75, 0xa4,
	0xba, 0x2f, 0xd4, 0x2a, 0x43, 0x32, 0x74, 0x00, 0x10, 0x73, 0x09, 0xfc, 0x29, 0xcc, 0xa7, 0x0b,
	0xb3, 0x8a, 0x54, 0xbb, 0xe6, 0x68, 0x43, 0x89, 0x51, 0xa2, 0x97, 0xb0, 0xc9, 0x1d, 0x9f, 0x28,
	0xc0, 0x9b, 0x0b, 0x8d, 0x3b, 0xd1, 0x84, 0x38, 0xda, 0x50, 0x04, 0x0d, 0x52, 0x00, 0x45, 0xcf,
	0x17, 0x54, 0xe7, 0x4c, 0xe5, 0xfd, 0x92, 0xda, 0xf2, 0x25, 0xa5, 0xca, 0x5b, 0xba, 0x35, 0x76,
	0xaa, 0xed, 0xb2, 0x0b, 0xe5, 0xd9, 0xbb, 0x82, 0xd2, 0xf2, 0x49, 0x25, 0x6b, 0xe0, 0xa3, 0x0d,
	0x65, 0x46, 0x86, 0xda, 0xc9, 0x9b, 0x77, 0xfe, 0x62, 0xe3, 0xee, 0x87, 0xf3, 0xca, 0xd4, 0x55,
	0xfb, 0x7e, 0xea, 0xaa, 0x9d, 0xdf, 0x89, 0xdf, 0x5b, 0x9a, 0xb8, 0x71, 0xb4, 0xf4, 0xdd, 0xfa,
	0x2b, 0x28, 0x45, 0xb7, 0xea, 0xd5, 0xe5, 0xf6, 0x92, 0xc8, 0x61, 0xe8, 0x3e, 0x87, 0x44, 0xe8,
	0xcd, 0xfc, 0x0d, 0xfa, 0xad, 0x15, 0x7c, 0x42, 0x1f, 0x3e, 0x7f, 0x65, 0x7e, 0x98, 0xbe, 0x32,
	0x6f, 0xac, 0xf0, 0x4b, 0x22, 0x8e, 0xa4, 0xef, 0xc8, 0x77, 0xcb, 0x50, 0x74, 0xb5, 0x2b, 0x1a,
	0x51, 0x5e, 0xe7, 0x4b, 0x5b, 0xd2, 0xf6, 0xeb, 0x7c, 0xe9, 0x9a, 0x74, 0xfd, 0xd1, 0x21, 0x94,
	0xc2, 0x1e, 0x41, 0xf2, 0xee, 0xa4, 0x0c, 0x85, 0xd1, 0x71, 0xbb, 0xd7, 0x93, 0x32, 0x08, 0x60,
	0xf3, 0xb8, 0xb3, 0xdf, 0x3d, 0x39, 0x96, 0xb2, 0x14, 0xdc, 0x6b, 0x2b, 0x87, 0xe2, 0xee, 0xa3,
	0xd3, 0x1f, 0x28, 0xc7, 0x83, 0x93, 0x91, 0x94, 0x7f, 0xf4, 0xcf, 0x19, 0x5e, 0x81, 0x8b, 0xd3,
	0x5a, 0x81, 0x72, 0x7f, 0xa0, 0x8e, 0xc6, 0xed, 0xf1, 0xc9, 0x48, 0xda, 0xa0, 0x2c, 0x86, 0xed,
	0xd1, 0x88, 0xdd, 0xbf, 0x94, 0xa1, 0x70, 0xd0, 0x6b, 0xbf, 0xf9, 0x4e, 0xca, 0x52, 0x89, 0xe3,
	0xee, 0x71, 0x67, 0x70, 0x32, 0x96, 0x72, 0x14, 0xe7, 0xa0, 0xdd, 0xed, 0x75, 0xf6, 0xa5, 0x3c,
	0xaa, 0x02, 0x74, 0xfb, 0x7b, 0x83, 0xe3, 0x61, 0xaf, 0x33, 0xee, 0x48, 0x05, 0x84, 0xa0, 0x2a,
	0xee, 0x61, 0x66, 0x57, 0x28, 0xd7, 0xa0, 0xc6, 0xf1, 0xd5, 0x71, 0x78, 0x7d, 0x53, 0x44, 0x77,
	0x41, 0x1e, 0x0f, 0x06, 0x3d, 0xf5, 0xa8, 0xdd, 0x1b, 0x77, 0xf6, 0xd5, 0xdd, 0xce, 0xc1, 0x40,
	0xe9, 0xa8, 0xe3, 0xce, 0x68, 0xdc, 0xed, 0x1f, 0x4a, 0xa5, 0xdd, 0x23, 0xa0, 0x8e, 0xb1, 0xc5,
	0xdf, 0x31, 0xb6, 0xc2, 0x77, 0x8c, 0x5c, 0x9b, 0x2d, 0xcb, 0x3c, 0x6d, 0xa5, 0xdf, 0x31, 0xee,
	0xde, 0x9c, 0xc5, 0xb0, 0x11, 0x83, 0x0c, 0x3d, 0x87, 0x38, 0xfe, 0xe9, 0x26, 0x7b, 0x62, 0xf8,
	0xd5, 0x6f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x38, 0x51, 0x4c, 0x87, 0x26, 0x29, 0x00, 0x00,
}
